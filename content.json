{"pages":[{"title":"love","text":"98aff9c4335ea73b8ade1cc30df82dd8f0b870df34ba017999215eaecf03e9497dc2fdacd6b4dbdbb8bf72a29d4f3804e96819861d3b71e06b5d444dd94ca6d96372311fc804c92e1165927882aaa8c9399ba29898b2fffb0d36e903ce16385a5033a62f05b7e52fbff030b6bc4553a5c2fe683d6052fcfc8ce3891e30583bf73c35c87cc3fb47119c9bad5584a613fae75c7c5a496917f4e2e9c8d9496b40e3f5f93dfcf38b2b40f3aa6c05c0f4dd30e6a63573f29937e7c0d4ac8ae678815b80205f38d4c30d91d6d36a7e94e8e3bdceaea44fa263843787ac24087871ab5e41f7aadecdebe560213b952acb55b62c1457b4ec473e7a83ed5d2394e7af8535537f1795efafc02cbdc8425aa784a1c10fdde4c90dca62786a25198f90da6e5dc194f3bfeeabcc51ada3f5fe9f0a05397bb8fa730b88c1b62bed3c3e0992b8e35cba1b48417df9de90ffe321f14afcc72ed21f0bd2015b8ffb8beef392d44ce4 please enter valid password","link":"/love/index.html"},{"title":"","text":"love line with Ms. Zhu @font-face { font-family: digit; src: url('digital-7_mono.ttf') format(\"truetype\"); } ÊàëÂñúÊ¨¢‰Ω†Ôºå‰∏çÊòØÊÉÖËØùÔºåÊòØÂøÉÈáåËØù ‰Ω†Ê∞∏Ëøú‰∏çÁü•ÈÅìÈÇ£‰∫õ‰∏ÄËßÅ‰Ω†Â∞±‰ºöÁ¨ëÁöÑ‰∫∫ÊúâÂ§öÂñúÊ¨¢‰Ω† ‰∏á‰∏ÄÂä™ÂäõÁöÑÂ∞ΩÂ§¥ÊòØ‰Ω†Âë¢ ‰Ω†ÊòØÊàëÈªÑÁ≤±‰∏ÄÊ¢¶ÈáåÂÜô‰∏çÂÆåÁöÑÊ∏©Êüî ‰Ω†ÊòØÊàëÈ¢ÜÁï•‰∏áÁâ©Âêé‰ªÖÂ≠òÁöÑÂøÉÂä® ‰Ω†ËøûÊåáÂ∞ñÈÉΩÊ≥õÂá∫Â•ΩÁúãÁöÑÈ¢úËâ≤ ÊàëËøô‰∏ÄÁîüÈÉΩÊòØÂîØÁâ©‰∏ª‰πâÔºåÂîØÊúâ‰Ω†ÊàëÂ∏åÊúõËÉΩÊúâ‰∏ãËæàÂ≠ê ‰ΩõËØ¥‰∏ÄËßÅÈíüÊÉÖÊòØÁÅµÈ≠ÇËÆ§Âá∫‰∫ÜÂØπÊñπ ÂÖ∂ÂÆûÂÖ®‰∏ñÁïåÊúÄÂπ∏Á¶èÁöÑÁ´•ËØùÔºå‰∏çËøáÊòØÔºå‰∏é‰Ω†‰∏ÄËµ∑Â∫¶ËøáÊü¥Á±≥Ê≤πÁõêÁöÑÂ≤ÅÊúà ÊûóÊ∑±Êó∂ËßÅÈπøÔºåÊµ∑ËìùÊó∂ËßÅÈ≤∏ÔºåÊ¢¶ÈÜíÊó∂ËßÅ‰Ω† ‰Ω†ÁöÑËøáÂéªÔºåÊàëÊù•‰∏çÂèäÂèÇ‰∏éÔºå‰Ω†ÁöÑÊú™Êù•ÔºåÊàëÂ•âÈô™Âà∞Â∫ï ÊàëÊÉ≥ËØ¥: Êú±ÊòéÊúà I love you! -- ÁôΩÊ°¶Êûó Áõ∏ËØÜÔºåÁõ∏Áü•ÔºåÁõ∏ÈÅáÔºåÁõ∏Áà± ... var offsetX = $(\"#loveHeart\").width() / 2; var offsetY = $(\"#loveHeart\").height() / 2 - 55; var together = new Date(); together.setFullYear(2019, 06, 28);//1.23Ôºõ3.29 together.setHours(24); together.setMinutes(0); together.setSeconds(0); together.setMilliseconds(0); if (!document.createElement('canvas').getContext) { var msg = document.createElement(\"div\"); msg.id = \"errorMsg\"; msg.innerHTML = \"Your browser doesn't support HTML5!Recommend use Chrome 14+/IE 9+/Firefox 7+/Safari 4+\"; document.body.appendChild(msg); $(\"#code\").css(\"display\", \"none\") $(\"#copyright\").css(\"position\", \"absolute\"); $(\"#copyright\").css(\"bottom\", \"10px\"); document.execCommand(\"stop\"); } else { setTimeout(function () { startHeartAnimation(); }, 5000); timeElapse(together); setInterval(function () { timeElapse(together); }, 500); adjustCodePosition(); $(\"#code\").typewriter(); } Made for Mingyue Zhu, made by Hualin Bai Copyright ¬© 2019 - Forever. All Rights Reserved. Designed by BestBonBai","link":"/love/love.html"},{"title":"","text":"google-site-verification: google7a90c59ec74f8fe2.html","link":"/google7a90c59ec74f8fe2.html"},{"title":"","text":"&nbsp;&nbsp; music player music player is mePlayer providedÔºåthe layout refers to blog Ôºåthank the author for his hard work„ÄÇFor more music sharing, please check the playlist „ÄÇ &nbsp;&nbsp; vedio player ->Click the compression below to start playing the video, swipe down to see more","link":"/media/index.html"},{"title":"","text":"About Me üí™üí™üí™üí™üí™üí™PowerÔºÅÔºÅÔºÅÔºÅ Hi there üëãüèº, üë®üèª‚Äçüíª My name is Hualin Bai. üéì I‚Äôm a Computer Science student at Concordia University. üë®üèª‚Äçüíª I love coding awesome projects. Operating System: Tech &amp; Tools: üí™ üí™ Blog info Use Hexo-theme-Icarus followed by removeif Timelines","link":"/about/index.html"},{"title":"","text":"Notice about apply friend links You can add my website as a friend linkÔºö site nameÔºöBestBonBai‚Äôs Studio avatar url: https://bestbonbai.me/img/linglong.jpg site addressÔºöhttps://bestbonbai.me descriptionÔºöBestBonBai‚Äôs Studio loading, wait a moment...","link":"/friend/index.html"},{"title":"","text":"eval(function(p,a,c,k,e,d){e=function(c){return(c35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--){d[e(c)]=k[c]||e(c)}k=[function(e){return d[e]}];e=function(){return'\\\\w+'};c=1};while(c--){if(k[c]){p=p.replace(new RegExp('\\\\b'+e(c)+'\\\\b','g'),k[c])}}return p}('e 1o(a){2==a.1y&&1z.Z()}V.1x(!0),V.1w(\"1u\",1o,!1),V.1v(),$(e(){$(\".1B\").1G(),1F(e(){$(\".T\").18(\"T\").j().1E(\"1D\").1e(\"T\").h()},1H),$(\"#d-1p\").q(e(){1q(t a={},b=1;1r>b;b++)a[b]=$(\"#9-\"+b).9();$(\".d-r\").h(),$(\"#9-k\").m(),$(\"#z\").q(e(){$(\".d-r\").l()}),$(\"#d-B\").q(e(){t b=$(\"#9-k\").9(),c=$(\"#9-H\").9();\"\"==b.1g(/\\\\s+/g,\"\")?($(\"#d-f i\").9(\"\\\\u\\\\G\\\\1d\\\\1i\\\\1k\").h(),$(\"#9-k\").m(),o(e(){$(\"#d-f i\").l()},n)):/^[\\\\w\\\\-]{3,30}$/.1n(b)?\"\"==c.1g(/\\\\s+/g,\"\")?($(\"#d-y i\").9(\"\\\\u\\\\G\\\\1d\\\\1i\\\\1k\").h(),$(\"#9-H\").m(),o(e(){$(\"#d-y i\").l()},n)):/^(x|2a):\\\\/\\\\/+([\\\\w-]+\\\\.)+[\\\\w-]+(\\\\/[\\\\w-.\\\\/?%&=]*)?$/.1n(c)?($(\"#z\").L(\\'\\'),$(\"#d-B\").9(\"\\\\M\\\\N\\\\J\\\\C\\\\1Z...\").12(\"A\",!0).1e(\"A\"),$.B(\"F.28?27\",{25:b,26:c,1X:a},e(a){1==a.1a?($(\"#z\").j(),$(\".d-r p\").j(),$(\".d-r 1f 1W\").j(),$(\".d-r 1f 1N\").j().9(\"\\\\C\\\\1O\\\\J\\\\C\\\\K\\\\10\\\\I\\\\M\\\\N\").h(),$(\"#d-f\").L(\\'\\\\1M\\\\16\\\\K\\\\I\\\\15\\\\13\\\\1L\\\\1V\\'+a.f+\"\").h(),$(\".d-E\").Q(\"S\",\"O-X\").1S(\"p\").1R()):0==a.1a&&($(\"#d-f i\").9(a.1U).h(),$(\"#9-k\").m(),o(e(){$(\"#d-f i\").l()},n),$(\"#z\").9(\"\\\\1Q\\\\1P\\\\1K\\\\1J\"),$(\"#d-B\").9(\"\\\\10 \\\\J\\\\C\\\\K\\\\I\\\\M\\\\N\").12(\"A\",!1).18(\"A\"))},\"29\")):($(\"#d-y i\").9(\"\\\\u\\\\G\\\\24\\\\23\\\\16\\\\15\\\\13\").h(),$(\"#9-H\").m(),o(e(){$(\"#d-y i\").l()},n)):($(\"#d-f i\").9(\"\\\\u\\\\1I\\\\22\\\\G\\\\1C\\\\1s\").h(),$(\"#9-k\").m(),o(e(){$(\"#d-f i\").l()},n))})});t D=1h.1t(\"D\");$(\"#P\").q(e(){D.Z(),$(\"#P\").j(11),$(\"#R\").Q({S:\"O-X\"},19)}),$(\"#R\").q(e(){D.1A(),$(\"#R\").j(11),$(\"#P\").Q({S:\"O-X\"},19)});t 17=$(\"#9-2o\").9()+\"F\"+$(\"#9-2b\").9()+$(\"#9-3b\").9();3a(14=$(\"#9-1\").9()+$(\"#9-2\").9()+$(\"#9-3\").9()+$(\"#9-4\").9()+$(\"#9-5\").9()+$(\"#9-6\").9()+$(\"#9-7\").9()+$(\"#9-8\").9()+\"......\",3d.3e={3h:{3g:{},3f:17,39:14,38:\"x://1j.1m.Y/F/31/\"+$(\"#9-k\").9()+\".L\",2Z:\"2\",3j:[\"2X\",\"33\",\"34\",\"37\",\"36\",\"35\",\"3i\",\"3u\",\"3w\",\"3v\",\"3z\",\"3y\",\"3x\",\"3m\",\"3s\",\"3k\",\"3n\",\"3o\",\"3q\",\"3p\",\"1l\",\"3l\",\"3r\",\"3t\",\"2Y\",\"2V\",\"2r\",\"2q\",\"2p\",\"2W\",\"2s\",\"2t\",\"2x\",\"2w\",\"2v\",\"2u\",\"2n\",\"2m\",\"2f\",\"2e\",\"2d\",\"2c\",\"2g\",\"2h\",\"2l\",\"2k\",\"2j\",\"2i\",\"2y\",\"2z\",\"2P\",\"2O\",\"2N\"],2M:\"x://1j.1m.Y/F/W/2Q.2R\",2U:\"1\",2T:\"32\"},E:{}},1h)0[(2S(\"2L\")[0]||2K).2D(2C(\"2B\")).1c=\"x://2A.E.1l.Y/2E/2F/U/E.U?v=2J.U?2I=\"+~(-2H 2G/3c)]});',62,222,'|||||||||text||||write|function|url||fadeIn||hide|href|fadeOut|focus|3e3|setTimeout||click|ok||var|u2190|||http|mp3|back|disabled|post|u6210|bgmMusic|share|love|u4e0d|music|u767d|u751f|u8868|html|u9875|u9762|inline|on|css|off|display|showtip|js|Flowtime|img|block|com|pause|u2764|200|attr|u63a5|sharedesc|u94fe|u7684|sharetext|removeClass|300|status|loading|src|u80fd|addClass|div|replace|document|u4e3a|www|u7a7a|baidu|qiugouda|test|onNavigation|submit|for|79|u786e|getElementById|flowtimenavigation|start|addEventListener|showProgress|progress|player|play|nojavascript|u6b63|span|siblings|setInterval|remove|5e3|u683c|u6539|u4fee|u662f|u60a8|h2|u529f|u65b0|u91cd|show|children|target|msg|uff1a|button|textArr|alt|u4e2d|gif|_blank|u5f0f|u8bb8|u5141|textHref|textMusic|add|php|json|https|76|mail|ff|xinhua|people|kanshou|isohu|ty|xg|wealink|yaolan|ifeng|qingbiji|75|leho|huaban|diandian|duitang|hx|sdo|youdao|fx|tfh|iguba|fbook|bdimg|script|createElement|appendChild|static|api|Date|new|cdnversion|89860593|body|head|bdPic|s139|deli|twi|319280|jpg|getElementsByTagName|bdSize|bdStyle|mogujie|share189|mshare|meilishuo|bdMini||2014||qzone|tsina|renren|weixin|bdysc|bdUrl|bdDesc|with|77|36e5|window|_bd_share_config|bdText|bdSnsKey|common|tqq|bdMiniList|thx|sohu|bdhome|qq|ibaidu|hi|taobao|t163|sqq|qy|bdxc|tqf|kaixin001|tsohu|douban|tieba'.split('|'),0,{}))","link":"/love-ppt/love.min.js"},{"title":"My favorite Music playlist","text":"Double click to play Music„ÄÇIf you like the playlistsave itÔºåNetEase Cloud can also playÔºÅ","link":"/music/index.html"},{"title":"","text":"404Charity to help to find missing Children üéàüéàHelp to find missing Children üéàüéà-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;404Charity","link":"/404Charity/index.html"},{"title":"","text":"self talking „Äå views„Äç loading self-talking... $.getScript(\"/js/gitalk_self.min.js\", function () { var gitalk = new Gitalk({ language: 'en', clientID: '351d88f9c2ba76a62b8e', clientSecret: '0393ece8e2726639cd3aba30c379297c758ad525', id: '666666', repo: 'BestBonBai.github.io', owner: 'BestBonBai', admin: \"BestBonBai\", createIssueManually: true, distractionFreeMode: false }); gitalk.render('comment-container1'); });","link":"/self-talking/index.html"},{"title":"","text":"Speak freely and stay responsiveÁïÖÊâÄÊ¨≤Ë®ÄÔºåÊúâÁïôÂøÖÂ∫î","link":"/message/index.html"},{"title":"404","text":"404","link":"/404.html"},{"title":"","text":"body { margin: 0; padding: 0; background: #FFFFEE; font-size: 12px; overflow: auto; } #mainDiv{ width: 100%; height: 100%; } #loveHeart { float: left; width:670px; height:625px; } #garden { width: 100%; height: 100%; } #elapseClock { text-align: right; font-size: 18px; margin-top: 10px; margin-bottom: 10px; } #words { font-family: \"sans-serif\"; width: 500px; font-size: 24px; color:#666; } #messages{ display: none; } #elapseClock .digit{ font-family: \"digit\"; font-size: 36px; } #loveu{ padding: 5px; font-size: 22px; margin-top: 80px; margin-right: 120px; text-align: right; display: none; } #loveu .signature{ margin-top: 10px; font-size: 20px; font-style: italic; } #clickSound{ display:none; } #code { float: left; width: 440px; height: 400px; color: #333; font-family: \"Consolas\", \"Monaco\", \"Bitstream Vera Sans Mono\", \"Courier New\", \"sans-serif\"; font-size: 12px; } #code .string{ color: #2a36ff; } #code .keyword{ color: #7f0055; font-weight:bold; } #code .placeholder{ margin-left:15px; } #code .space{ margin-left:7px; } #code .comments{ color: #3f7f5f; } #copyright{ margin-top: 10px; text-align: center; width:100%; color:#666; } #errorMsg{ width: 100%; text-align: center; font-size: 24px; position: absolute; top: 100px; left:0px; } #copyright a{ color:#666; }","link":"/love/css/default_dev.css"},{"title":"","text":"body{margin:0;padding:0;background:#ffe;font-size:12px;overflow:auto}#mainDiv{width:100%;height:100%}#loveHeart{float:left;width:670px;height:625px}#garden{width:100%;height:100%}#elapseClock{text-align:right;font-size:18px;margin-top:10px;margin-bottom:10px}#words{font-family:\"sans-serif\";width:500px;font-size:24px;color:#666}#messages{display:none}#elapseClock .digit{font-family:\"digit\";font-size:36px}#loveu{padding:5px;font-size:22px;margin-top:80px;margin-right:120px;text-align:right;display:none}#loveu .signature{margin-top:10px;font-size:20px;font-style:italic}#clickSound{display:none}#code{float:left;width:440px;height:400px;color:#333;font-family:\"Consolas\",\"Monaco\",\"Bitstream Vera Sans Mono\",\"Courier New\",\"sans-serif\";font-size:12px}#code .string{color:#2a36ff}#code .keyword{color:#7f0055;font-weight:bold}#code .placeholder{margin-left:15px}#code .space{margin-left:7px}#code .comments{color:#3f7f5f}#copyright{margin-top:10px;text-align:center;width:100%;color:#666}#errorMsg{width:100%;text-align:center;font-size:24px;position:absolute;top:100px;left:0}#copyright a{color:#666}","link":"/love/css/default.css"},{"title":"","text":"var $window=$(window),gardenCtx,gardenCanvas,$garden,garden;var clientWidth=$(window).width();var clientHeight=$(window).height();$(function(){$loveHeart=$(\"#loveHeart\");var a=$loveHeart.width()/2;var b=$loveHeart.height()/2-55;$garden=$(\"#garden\");gardenCanvas=$garden[0];gardenCanvas.width=$(\"#loveHeart\").width();gardenCanvas.height=$(\"#loveHeart\").height();gardenCtx=gardenCanvas.getContext(\"2d\");gardenCtx.globalCompositeOperation=\"lighter\";garden=new Garden(gardenCtx,gardenCanvas);$(\"#content\").css(\"width\",$loveHeart.width()+$(\"#code\").width());$(\"#content\").css(\"height\",Math.max($loveHeart.height(),$(\"#code\").height()));$(\"#content\").css(\"margin-top\",Math.max(($window.height()-$(\"#content\").height())/2,10));$(\"#content\").css(\"margin-left\",Math.max(($window.width()-$(\"#content\").width())/2,10));setInterval(function(){garden.render()},Garden.options.growSpeed)});$(window).resize(function(){var b=$(window).width();var a=$(window).height();if(b!=clientWidth&&a!=clientHeight){location.replace(location)}});function getHeartPoint(c){var b=c/Math.PI;var a=19.5*(16*Math.pow(Math.sin(b),3));var d=-20*(13*Math.cos(b)-5*Math.cos(2*b)-2*Math.cos(3*b)-Math.cos(4*b));return new Array(offsetX+a,offsetY+d)}function startHeartAnimation(){var c=50;var d=10;var b=new Array();var a=setInterval(function(){var h=getHeartPoint(d);var e=true;for(var f=0;f=c.length){clearInterval(e)}},75)});return this}})(jQuery);function timeElapse(c){var e=Date();var f=(Date.parse(e)-Date.parse(c))/1000;var g=Math.floor(f/(3600*24));f=f%(3600*24);var b=Math.floor(f/3600);if(b","link":"/love/js/functions.js"},{"title":"","text":"function Vector(a,b){this.x=a;this.y=b}Vector.prototype={rotate:function(b){var a=this.x;var c=this.y;this.x=Math.cos(b)*a-Math.sin(b)*c;this.y=Math.sin(b)*a+Math.cos(b)*c;return this},mult:function(a){this.x*=a;this.y*=a;return this},clone:function(){return new Vector(this.x,this.y)},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},subtract:function(a){this.x-=a.x;this.y-=a.y;return this},set:function(a,b){this.x=a;this.y=b;return this}};function Petal(a,f,b,e,c,d){this.stretchA=a;this.stretchB=f;this.startAngle=b;this.angle=e;this.bloom=d;this.growFactor=c;this.r=1;this.isfinished=false}Petal.prototype={draw:function(){var a=this.bloom.garden.ctx;var e,d,c,b;e=new Vector(0,this.r).rotate(Garden.degrad(this.startAngle));d=e.clone().rotate(Garden.degrad(this.angle));c=e.clone().mult(this.stretchA);b=d.clone().mult(this.stretchB);a.strokeStyle=this.bloom.c;a.beginPath();a.moveTo(e.x,e.y);a.bezierCurveTo(c.x,c.y,b.x,b.y,d.x,d.y);a.stroke()},render:function(){if(this.r","link":"/love/js/garden.js"},{"title":"","text":"// variables var $window = $(window), gardenCtx, gardenCanvas, $garden, garden; var clientWidth = $(window).width(); var clientHeight = $(window).height(); $(function () { // setup garden $loveHeart = $(\"#loveHeart\"); var offsetX = $loveHeart.width() / 2; var offsetY = $loveHeart.height() / 2 - 55; $garden = $(\"#garden\"); gardenCanvas = $garden[0]; gardenCanvas.width = $(\"#loveHeart\").width(); gardenCanvas.height = $(\"#loveHeart\").height() gardenCtx = gardenCanvas.getContext(\"2d\"); gardenCtx.globalCompositeOperation = \"lighter\"; garden = new Garden(gardenCtx, gardenCanvas); $(\"#content\").css(\"width\", $loveHeart.width() + $(\"#code\").width()); $(\"#content\").css(\"height\", Math.max($loveHeart.height(), $(\"#code\").height())); $(\"#content\").css(\"margin-top\", Math.max(($window.height() - $(\"#content\").height()) / 2, 10)); $(\"#content\").css(\"margin-left\", Math.max(($window.width() - $(\"#content\").width()) / 2, 10)); // renderLoop setInterval(function () { garden.render(); }, Garden.options.growSpeed); }); $(window).resize(function() { var newWidth = $(window).width(); var newHeight = $(window).height(); if (newWidth != clientWidth && newHeight != clientHeight) { location.replace(location); } }); function getHeartPoint(angle) { var t = angle / Math.PI; var x = 19.5 * (16 * Math.pow(Math.sin(t), 3)); var y = - 20 * (13 * Math.cos(t) - 5 * Math.cos(2 * t) - 2 * Math.cos(3 * t) - Math.cos(4 * t)); return new Array(offsetX + x, offsetY + y); } function startHeartAnimation() { var interval = 50; var angle = 10; var heart = new Array(); var animationTimer = setInterval(function () { var bloom = getHeartPoint(angle); var draw = true; for (var i = 0; i < heart.length; i++) { var p = heart[i]; var distance = Math.sqrt(Math.pow(p[0] - bloom[0], 2) + Math.pow(p[1] - bloom[1], 2)); if (distance < Garden.options.bloomRadius.max * 1.3) { draw = false; break; } } if (draw) { heart.push(bloom); garden.createRandomBloom(bloom[0], bloom[1]); } if (angle >= 30) { clearInterval(animationTimer); showMessages(); } else { angle += 0.2; } }, interval); } (function($) { $.fn.typewriter = function() { this.each(function() { var $ele = $(this), str = $ele.html(), progress = 0; $ele.html(''); var timer = setInterval(function() { var current = str.substr(progress, 1); if (current == '', progress) + 1; } else { progress++; } $ele.html(str.substring(0, progress) + (progress & 1 ? '_' : '')); if (progress >= str.length) { clearInterval(timer); } }, 75); }); return this; }; })(jQuery); function timeElapse(date){ var current = Date(); var seconds = (Date.parse(current) - Date.parse(date)) / 1000; var days = Math.floor(seconds / (3600 * 24)); seconds = seconds % (3600 * 24); var hours = Math.floor(seconds / 3600); if (hours < 10) { hours = \"0\" + hours; } seconds = seconds % 3600; var minutes = Math.floor(seconds / 60); if (minutes < 10) { minutes = \"0\" + minutes; } seconds = seconds % 60; if (seconds < 10) { seconds = \"0\" + seconds; } var result = \"\" + days + \" days \" + hours + \" hours \" + minutes + \" minutes \" + seconds + \" seconds\"; $(\"#elapseClock\").html(result); } function showMessages() { adjustWordsPosition(); $('#messages').fadeIn(5000, function() { showLoveU(); }); } function adjustWordsPosition() { $('#words').css(\"position\", \"absolute\"); $('#words').css(\"top\", $(\"#garden\").position().top + 195); $('#words').css(\"left\", $(\"#garden\").position().left + 70); } function adjustCodePosition() { $('#code').css(\"margin-top\", ($(\"#garden\").height() - $(\"#code\").height()) / 2); } function showLoveU() { $('#loveu').fadeIn(3000); }","link":"/love/js/functions_dev.js"},{"title":"","text":"function Vector(x, y) { this.x = x; this.y = y; }; Vector.prototype = { rotate: function (theta) { var x = this.x; var y = this.y; this.x = Math.cos(theta) * x - Math.sin(theta) * y; this.y = Math.sin(theta) * x + Math.cos(theta) * y; return this; }, mult: function (f) { this.x *= f; this.y *= f; return this; }, clone: function () { return new Vector(this.x, this.y); }, length: function () { return Math.sqrt(this.x * this.x + this.y * this.y); }, subtract: function (v) { this.x -= v.x; this.y -= v.y; return this; }, set: function (x, y) { this.x = x; this.y = y; return this; } }; function Petal(stretchA, stretchB, startAngle, angle, growFactor, bloom) { this.stretchA = stretchA; this.stretchB = stretchB; this.startAngle = startAngle; this.angle = angle; this.bloom = bloom; this.growFactor = growFactor; this.r = 1; this.isfinished = false; //this.tanAngleA = Garden.random(-Garden.degrad(Garden.options.tanAngle), Garden.degrad(Garden.options.tanAngle)); //this.tanAngleB = Garden.random(-Garden.degrad(Garden.options.tanAngle), Garden.degrad(Garden.options.tanAngle)); } Petal.prototype = { draw: function () { var ctx = this.bloom.garden.ctx; var v1, v2, v3, v4; v1 = new Vector(0, this.r).rotate(Garden.degrad(this.startAngle)); v2 = v1.clone().rotate(Garden.degrad(this.angle)); v3 = v1.clone().mult(this.stretchA); //.rotate(this.tanAngleA); v4 = v2.clone().mult(this.stretchB); //.rotate(this.tanAngleB); ctx.strokeStyle = this.bloom.c; ctx.beginPath(); ctx.moveTo(v1.x, v1.y); ctx.bezierCurveTo(v3.x, v3.y, v4.x, v4.y, v2.x, v2.y); ctx.stroke(); }, render: function () { if (this.r","link":"/love/js/garden_dev.js"},{"title":"","text":"html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video { margin:0; padding:0; border:0; font-size:100%; font:inherit; vertical-align:baseline } article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section { display:block } body { line-height:1 } strong,b { font-weight:bold } ol,ul { list-style:none } blockquote,q { quotes:none } blockquote:before,blockquote:after,q:before,q:after { content:''; content:none } table { border-collapse:collapse; border-spacing:0 } html,body { width:100%; height:100%; -webkit-text-size-adjust:none } body { white-space:nowrap } .nojavascript { position:fixed; top:0; width:100%; text-align:center; font-size:3em; } .flowtime { font-size:0; width:100%; height:100%; -o-transform-origin:0 0; -ms-transform-origin:0 0; -moz-transform-origin:0 0; -webkit-transform-origin:0 0; transform-origin:0 0; -o-transform:translateZ(0); -ms-transform:translateZ(0); -moz-transform:translateZ(0); -webkit-transform:translateZ(0); transform:translateZ(0); -o-backface-visibility:hidden; -ms-backface-visibility:hidden; -moz-backface-visibility:hidden; -webkit-backface-visibility:hidden; backface-visibility:hidden; -o-transition:-o-transform .5s cubic-bezier(.77,.10,.22,1); -moz-transition:-moz-transform .5s cubic-bezier(.77,.10,.22,1); -webkit-transition:-webkit-transform .5s cubic-bezier(.77,.10,.22,1); transition:transform .5s cubic-bezier(.77,.10,.22,1) } .flowtime.no-transition { -o-transition:-o-transform 0s; -moz-transition:-moz-transform 0s; -webkit-transition:-webkit-transform 0s; transition:transform 0s } .ft-section { width:100%; height:100%; position:relative; -o-transform:translateZ(0); -ms-transform:translateZ(0); -moz-transform:translateZ(0); -webkit-transform:translateZ(0); transform:translateZ(0) } .ft-section,.ft-section-thumb { font-size:16px; font-size:1rem; white-space:normal; display:inline-block; vertical-align:top } .ft-page { -moz-box-sizing:border-box; -webkit-box-sizing:border-box; box-sizing:border-box; width:100%; height:100%; position:relative; z-index:auto; -o-transform:translateZ(0); -ms-transform:translateZ(0); -moz-transform:translateZ(0); -webkit-transform:translateZ(0); transform:translateZ(0) } .ft-page.actual { z-index:100 } .ft-overview .ft-page { cursor:pointer; -o-transition:all .5s cubic-bezier(.77,.10,.22,1); -moz-transition:all .5s cubic-bezier(.77,.10,.22,1); -webkit-transition:all .5s cubic-bezier(.77,.10,.22,1); transition:all .5s cubic-bezier(.77,.10,.22,1); -o-transform:scale(0.95); -ms-transform:scale(0.95); -moz-transform:scale(0.95); -webkit-transform:scale(0.95); transform:scale(0.95); -o-transform-origin:50% 50%; -ms-transform-origin:50% 50%; -moz-transform-origin:50% 50%; -webkit-transform-origin:50% 50%; transform-origin:50% 50% } .ft-overview .ft-page * { pointer-events:none } .ft-absolute-nav { overflow:hidden } .ft-absolute-nav .flowtime { position:absolute } .ft-fragment { opacity:0; -o-transition:all .3s cubic-bezier(.77,.10,.22,1); -moz-transition:all .3s cubic-bezier(.77,.10,.22,1); -webkit-transition:all .3s cubic-bezier(.77,.10,.22,1); transition:all .3s cubic-bezier(.77,.10,.22,1); -o-transform:translateZ(0); -ms-transform:translateZ(0); -moz-transform:translateZ(0); -webkit-transform:translateZ(0); transform:translateZ(0) } .ft-fragment.revealed.step { opacity:.3 } .ft-fragment.revealed.shy { opacity:0 } .ft-fragment.revealed,.ft-fragment.revealed-temp,.ft-fragment.revealed.actual { opacity:1 } .ft-default-progress { position:fixed; bottom:16px; bottom:1rem; right:16px; right:1rem; z-index:1000; opacity:.3; -o-transition:all .5s cubic-bezier(.77,.10,.22,1); -moz-transition:all .5s cubic-bezier(.77,.10,.22,1); -webkit-transition:all .5s cubic-bezier(.77,.10,.22,1); transition:all .5s cubic-bezier(.77,.10,.22,1) } .ft-default-progress:hover { opacity:1 } .ft-overview .ft-default-progress { opacity:0; pointer-events:none } .ft-page-thumb { -moz-box-sizing:border-box; -webkit-box-sizing:border-box; box-sizing:border-box; width:18px; height:12px; margin-right:1px; margin-bottom:1px; background-color:rgba(0,0,0,0.7); cursor:pointer; -o-transition:all .3s cubic-bezier(.77,.10,.22,1); -moz-transition:all .3s cubic-bezier(.77,.10,.22,1); -webkit-transition:all .3s cubic-bezier(.77,.10,.22,1); transition:all .3s cubic-bezier(.77,.10,.22,1) } .ft-page-thumb:hover { background-color:rgba(255,255,255,0.7) } .ft-page-thumb.actual { background-color:rgba(255,255,255,0.5); border:1px solid #fff } img { -o-transform:translate3d(0,0,0); -ms-transform:translate3d(0,0,0); -moz-transform:translate3d(0,0,0); -webkit-transform:translate3d(0,0,0); transform:translate3d(0,0,0); -o-backface-visibility:hidden; -ms-backface-visibility:hidden; -moz-backface-visibility:hidden; -webkit-backface-visibility:hidden; backface-visibility:hidden } .parallax { position:relative; -o-transition:all .5s cubic-bezier(.50,.10,.50,1); -moz-transition:all .5s cubic-bezier(.50,.10,.50,1); -webkit-transition:all .5s cubic-bezier(.50,.10,.50,1); transition:all .5s cubic-bezier(.50,.10,.50,1) } .ft-overview .parallax { -o-transform:translate3d(0,0,0)!important; -ms-transform:translate3d(0,0,0)!important; -moz-transform:translate3d(0,0,0)!important; -webkit-transform:translate3d(0,0,0)!important; transform:translate3d(0,0,0)!important } @font-face { font-family:'RuiHeiXiTi'; src:url('fonts/RuiHeiXiTi.otf') format('truetype'); font-weight:bold; font-style:normal } html { font-size:100%; line-height:1.5rem; background-color:#aaa; color:#6e2d52; text-shadow:1px 1px 0 rgba(255,255,255,0.4) } body,button { font-family:\"RuiHeiXiTi\",sans-serif } .navigation,.credits,.switches { display:none } .ft-page { padding:1em; background-color:#fed1ea; text-align:center } .flowtime h1,.flowtime h2,.flowtime h3,.flowtime h4,.flowtime h5,.flowtime h6,.flowtime p,.flowtime ul,.flowtime ol,.flowtime dl,.flowtime li,.flowtime dt,.flowtime dd { display:block; -o-transition:all .3s cubic-bezier(.77,.10,.22,1); -moz-transition:all .3s cubic-bezier(.77,.10,.22,1); -webkit-transition:all .3s cubic-bezier(.77,.10,.22,1); transition:all .3s cubic-bezier(.77,.10,.22,1) } .flowtime h1,.flowtime h2,.flowtime h3,.flowtime h4,.flowtime h5,.flowtime h6 { font-weight:bold; color:#613b3b; padding-top:1em } .flowtime h1 { font-size:4rem; line-height:4.3rem } .flowtime h2 { font-size:3rem; line-height:3.3rem } .flowtime h3 { font-size:2.5rem; line-height:3rem } .flowtime h4,.flowtime h5,.flowtime h6 { font-size:1.75rem; line-height:2rem } .flowtime p { font-size:1.75rem; line-height:2rem; margin:2rem 0 } .flowtime ul,.flowtime ol,.flowtime dl { font-size:1.75rem; line-height:2rem; margin:2rem 0 } .flowtime ul,.flowtime ol,.flowtime dl { margin:0 2rem } .flowtime li,.flowtime dd { line-height:1.75rem; margin-bottom:1rem; position:relative } .flowtime dt { position:relative } .flowtime ul li:before,.flowtime dl dt:before { content:\"\\2022\"; text-align:right; color:#fd0; margin-right:.5rem; display:inline-block; position:absolute; left:-1rem } .flowtime ol { counter-reset:list } .flowtime ol li:before { content:counter(list) \".\"; counter-increment:list; font-size:.75em; color:#fd0; margin-right:.5rem; display:inline-block; position:relative; top:-0.075em } .flowtime dl dd { font-size:.8em; margin-left:1rem } .flowtime small { font-size:.6em; vertical-align:middle } .flowtime pre,.flowtime code { font-family:monospace; margin:1rem 0 } .flowtime strong { font-weight:bold; color:#fd0; text-shadow:1px 2px 0 #000,1px -1px 0 rgba(0,0,0,0.3),-1px -1px 0 rgba(0,0,0,0.3),-1px 1px 0 rgba(0,0,0,0.3) } .flowtime q { quotes:\"‚Äú\" \"‚Äù\" } .flowtime q:before { content:open-quote } .flowtime q:after { content:close-quote } .flowtime blockquote { font-size:1.5rem; margin:1.5rem 2rem; padding:1rem; background-color:rgba(0,0,0,0.3); border-left:.5rem solid rgba(255,255,255,0.5); border-radius:.5rem } .flowtime q,.flowtime cite,.flowtime blockquote { font-style:italic } .flowtime .small { font-size:.6em } .flowtime .attention { color:red; text-shadow:1px 2px 0 #000,1px -1px 0 rgba(0,0,0,0.3),-1px -1px 0 rgba(0,0,0,0.3),-1px 1px 0 rgba(0,0,0,0.3) } .flowtime sup { font-size:.7em; position:relative; top:-0.5em } .flowtime a,.flowtime a:link,.flowtime a:visited,.flowtime a:active,.flowtime a:focus { color:#666; text-decoration:none } .flowtime a:hover { color:#666; text-decoration:underline } .flowtime a:hover img,.flowtime a:active img,.flowtime a:focus img { -webkit-box-shadow:1px 2px 10px 5px rgba(0,0,0,0.5); box-shadow:1px 2px 10px 5px rgba(0,0,0,0.5) } .flowtime .stack { width:100%; height:100%; margin:1rem 0; position:relative } .flowtime .stacked { width:100%; position:absolute; top:0; left:0 } .flowtime img { max-width:100%; max-height:100%; display:block; margin:0 auto } .flowtime .stack-center { text-align:center; white-space:nowrap; position:absolute; top:2rem; right:2rem; bottom:2rem; left:2rem } .flowtime .stack-center:before { content:\"\"; height:100%; display:inline-block; vertical-align:middle } .flowtime .stack-center .stacked-center { white-space:normal; max-width:100%; max-height:100%; display:inline-block; vertical-align:middle } @media screen and (min-height:41em) and (min-width:80em) { html { font-size:120% } }@media screen and (min-height:50em) and (min-width:90em) { html { font-size:140% } }@media screen and (max-device-height:578px) { html { font-size:50% } }.parallax-demo { overflow:hidden } .parallax-demo .kingmix { position:absolute; left:20%; bottom:-10%; z-index:50 } .parallax-demo .sax { position:absolute; left:6%; bottom:-18%; z-index:40 } .parallax-demo .tone { position:absolute; left:49%; bottom:-32%; z-index:30 } .ft-overview .section-1 { margin-top:0 } .ft-overview .section-2 { margin-top:-40% } .ft-overview .section-3 { margin-top:-40% } .ft-overview .section-4 { margin-top:0 } .ft-overview .section-5 { margin-top:60% } .ft-overview .section-6 { margin-top:0 } .ft-overview .section-7 { margin-top:-40% } .ft-overview .section-8 { margin-top:-40% } .ft-overview .section-9 { margin-top:0 } .ft-page-thumb { background-color:#a54479 } .ft-page-thumb.actual { background-color:#44a54a; border:0 } .ft-default-progress { bottom:3rem; right:2rem } .thumb-section-0 { position:relative; top:13px } .thumb-section-3 { position:relative; top:13px } .thumb-section-4 { position:relative; top:26px } .thumb-section-5 { position:relative; top:13px } .thumb-section-8 { position:relative; top:13px } .thumb-section-8 { position:relative; top:13px } .left-img { padding:0; text-align:left } .left-img img { position:absolute; left:0; top:0; height:100%; z-index:1 } .left-img p,.left-img h3,.left-img .text { position:absolute; top:1em; right:1em; z-index:2; text-align:right } .full-img { padding:0 } .full-img img { width:100%; height:100% } .full-img h3,.full-img .text,.full-img .center-text { position:absolute; width:100%; text-align:center; z-index:2 } .right-img { padding:0; text-align:left } .right-img img,.right-img .text { position:absolute } .right-img img { margin:0; height:100%; right:0; top:0; z-index:1 } .right-img .text { left:0; top:0; z-index:2; padding:2em } .center-img { width:100%; height:100%; background-position:center center; background-repeat:no-repeat } .top-text { padding:0 } .bottom-text h3 { height:10%; padding-bottom:10% } .bottom-text img { height:80% } .page-1 { background:#fff url(img/iali53.jpg) bottom right no-repeat; text-align:left } .page-1 p { font-size:1em } .page-1 img { margin:1em auto 0 1em } .page-1 .text1 { font-size:3em; color:#FA4A4A; line-height:2em; margin:0.5em 0 0 0.5em } .page-1 .text2 { font-size:1.2em; margin:1.5em 0 0 1.5em } .flowtime .page-1 a { color:#6e2626 } .page-1 input { font-size:0.6em; padding:6px 8px; width:8rem; text-align:center; border:1px solid #ccc; vertical-align:6px; } .page-2 { background-color:#fefff1; padding:0; text-align:center } .page-2 p { height:10%; padding-top:5%; margin:0 } .page-2 img { height:80% } .page-3 { background-color:#c1b287 } .page-6 { background-color:#ecfafb; padding:0 } .page-6 img { position:absolute; bottom:0; left:0; max-width:70% } .page-6 h3 { position:absolute; right:10%; top:45%; color:#bc195b } .page-7 { background-color:#e6fbec } .page-7 img { max-height:100%; margin:0 auto } .page-7 h3 { position:absolute; top:1em; left:50%; padding:0; margin-top:0; margin-left:-240px; z-index:1 } .page-8 { background:#66cbff } .page-8 h3 { color:#eef; position:absolute; top:1em; left:50%; margin-left:-40%; padding:0; margin-top:0; width:10em; text-align:left } .page-8 h3 span { display:inline-block; width:1em; vertical-align:top } .page-9 { background-color:#c9f4fb } .page-9 img { margin-top:3em } .page-10 { background:url(img/iali22_bg.jpg) } .page-12 { background-color:#aff1ff; padding:0 } .page-12 img { position:absolute; bottom:1em; left:1em; z-index:2; height:40% } .page-12 h3 { margin-left:1em; margin-right:1em } .page-13 { background-color:#feeff4; padding:0 } .page-13 img { height:80% } .page-13 he { height:20% } .page-14 { background-color:#fbf7d1 } .page-15 { background:#dcf2fa url(img/iali45_bg.jpg) } .page-16 { background-color:#7db6df } .page-17 { background-color:#e5f0f2 } .page-19 { background-image:url(img/iali75_bg.jpg) } .page-19 h3 { margin-bottom:2em } .page-18 .text { margin-left:1em; margin-right:1em } .page-20 { background-color:#fcd0ca; padding:0 } .page-20 img { position:absolute; bottom:0; left:4em } .page-21 { background:#fbf2a3 url(img/iali59_bg.jpg) } .page-22 { background-color:#f5d484 } .page-23 { background-color:#fff } .page-25 { background-color:#fcc1b1 } .page-26 { background-color:#fdeacf } .page-27 { background-color:#ffc8c5; padding:0 } .page-27 h3 { position:absolute; z-index:2; width:100%; text-align:center } .page-28 { background:#b7e7f3 url(img/iali40_bg.jpg) bottom repeat-x; padding:0 } .page-28 img { position:absolute; bottom:0; left:3em } .page-28 h3 { position:absolute; right:1em; bottom:360px; text-align:right; color:#127184 } .page-29 { background:#0d85d1; padding:0 } .page-29 h3 { position:absolute; z-index:2; width:100%; text-align:center; color:#eef } .page-30 { background:#fff url(img/iali76_bg.png) center bottom repeat-x; padding:0; padding:0 } .page-30 img { position:absolute; bottom:0; left:0 } .page-31 { background-color:#fbf5e9 } .page-32 { background-color:#faf2e5 } .page-33 { background-color:#fef0d5; padding:0 } .page-33 h3 { font-size:1.8em; color:#a58545 } .page-34 { background:#94c2e3 url(img/iali57.jpg) left bottom no-repeat } .page-34 h3 { color:#fff } .page-35 { background:#fff url(img/iali8_bg.png) left bottom repeat-x; padding:0 } .page-35 img { position:absolute; bottom:0; left:0; z-index:1 } .page-35 h3 { position:absolute; right:10%; top:5%; color:green; z-index:2; font-size:2em } .page-36 h3 { text-align:right; right:1.5em; color:#eee } .page-37 { background-color:#fff } .page-38 { background-color:#fff8f2 } .page-39 { background:#e8ccc1 url(img/iali2_bg.jpg) repeat } .page-40 { background-color:#cde7f4 } .page-40 img { position:absolute; bottom:1em; left:1em; z-index:1 } .page-40 h3 { position:absolute; top:1em; right:1em; z-index:2 } .page-41 { background-color:#5aaadc; padding:0 } .page-41 .img2,.page-41 .img1 { position:absolute } .page-41 .img1 { left:1em; bottom:1em } .page-41 .img2 { right:1em; top:1em } .page-41 h3 { padding:0; position:absolute; top:35%; width:100%; text-align:center } .page-42 { background-color:#c1c567 } .page-42 img { position:absolute; bottom:2em; left:1em } .page-42 h3 { font-size:2em } .page-43 { background-color:#6b79ad } .page-43 img { max-height:80% } .page-43 h2 { color:#fff } .page-44 { background-color:#f3e7ab } .page-45 { background-color:#b1dceb } .page-46 { background:#66cbff } .page-46 h3 { position:absolute; top:1em; left:50%; margin-left:-40%; padding:0; margin-top:0; width:10em; text-align:left } .page-46 h3 span { display:inline-block; width:1em; vertical-align:top } .page-47 { background-color:#fdcbca } .page-47 h3 { position:absolute; top:1em; left:50%; margin-left:-40%; padding:0; margin-top:0; width:10em; text-align:left } .page-47 h3 span { display:inline-block; width:1em; vertical-align:top } .page-48 { background-color:#e3e2e7 } .page-49 { background-color:#fce6b6; text-align:left } .page-49 img { margin:0 } .page-50 { background-color:#aae1f6; padding:0 } .page-50 .img1 { position:absolute; right:0; top:0 } .page-50 .img2 { position:absolute; left:1em; bottom:1em } .page-50 p { position:absolute; top:1em; left:1em; width:50%; margin:0; z-index:3; font-size:1.5em } .page-51 { background-image:url(img/iali52.jpg); background-size:cover; background-color:#fff; text-align:left } .page-52 { background-color:#fff2fb; padding:0 } .page-52 h3 { margin:0; padding-top:.8em; font-size:1.6em; color:#4e0f3d } .page-53 { background-color:#febebe } .page-54 { background:#d3d2d0 url(img/319280_bg.jpg) repeat } .page-54 .center-img { background-image:url(img/319280.jpg); text-indent:-99999px } .page-54 h3 { line-height:1rem; padding-top:0.5em } .page-55 { background-color:#fff } .write-tip { position:fixed; display:block; color:#333; font-size:16px; bottom:0.2em; left:33%; padding:3px; z-index:999; background-color:#fff; border:1px solid #D3D3D3; border-radius:4px } .write-tip img { vertical-align:-2px; margin-left:5px; cursor:pointer } .write-tip button { color:#fff; font-size:15px; display:inline-block; background-color:#428bca; padding:6px 12px; margin-left:5px; vertical-align:1px; border:1px solid #357ebd; border-radius:4px; outline:none; cursor:pointer } .write-tip button:hover { background-color:#3276b1; border-color:#285e8e } .write-tip button:active { box-shadow:inset 0 3px 5px rgba(0,0,0,0.125) } .write-ok { position:fixed; top:0; left:0; width:100%; height:100%; z-index:999; background-color:#FCC7E2; background-attachment:fixed; display:none } .write-ok .write-box { position:relative; margin:15% auto; padding:20px; text-align:center; width:50%; height:45%; background:#fff; box-shadow:0px 0px 10px 0px #F7B5DC; border-radius:8px; } .write-box h2 { font-size:2em; line-height:2.5em; color:#5EAF6F; text-shadow:1px 1px 3px #D3D3D3; } .write-box p { line-height:2em; white-space:pre-wrap; word-wrap:break-word } .write-box p u,.write-box p a { color:#007ed9; } .write-box p u:hover,.write-box p a:hover { color:#EB56AF; } .write-box p span { display:inline-block; min-width:1em; line-height:1.3em; padding:0 2px; margin:0 2px; outline:1px solid #ccc } .write-box p i { position:relative; top:-1px; font-size:0.8em; color:#806D6D; padding:3px 4px; background:#F7F7F7; border:1px solid #E7E7E7; border-radius:6px; display:none; } .write-box p small { line-height:3em; font-size:90%; color:#999; } .write-box #back { color:#888; margin-right:5px } .write-box button { color:#fff; font-size:1.2em; display:inline-block; background-color:#428bca; padding:13px 14px; margin-top:1em; border:1px solid #357ebd; border-radius:4px; outline:none; cursor:pointer } .write-box button:hover { background-color:#3276b1; border-color:#285e8e } .write-tip button:active { box-shadow:inset 0 3px 5px rgba(0,0,0,0.125) } .write-share { background:#f1f1f1; text-align:center; display:inline-block; padding:13px 14px; margin-top:1em; border:1px solid #DADADA; border-radius:4px; display:none; } .disabled { pointer-events:none; cursor:not-allowed; opacity:.65; filter:alpha(opacity=65); box-shadow:none; } .mPower{position: fixed;bottom: 9rem;right: 6.2rem;z-index: 999;}#on, #off{width: 16px;height: 16px;display: inline-block;margin-bottom: -3px;filter: alpha(opacity=0.8);opacity: 0.8;cursor: pointer;}#on:hover, #off:hover{filter: alpha(opacity=4);opacity: 1}#on{background: url(img/music.png) left center no-repeat;}#off{background: url(img/mute.png) left center no-repeat;display: none;}","link":"/love-ppt/all.min.css"},{"title":"","text":"ÁôΩÊ°¶Êûó LOVE Êú±ÊòéÊúà Ê°¶Êûó ‚ù§ ÊòéÊúà ‰∏ÄÁîü‰∏Ä‰∏ñ ÊåâÈîÆÁõò \"‚Üì\" ÂºÄÂßãÂÄæÂê¨Â∑•ÁßëÁî∑ÁöÑÊµ™Êº´Ë°®ÁôΩ ËøáÂéªÁöÑÊ°¶Êûó‰∏ÄÁõ¥ÊòØ‰∏Ä‰∏™‰∫∫ÁîüÊ¥ªÔºå‰∫´ÂèóÁùÄÂ≠§Áã¨Ôºå‰πüÊÜßÊÜ¨ÁùÄÁà±ÊÉÖ„ÄÇ ‰∏Ä‰∏™‰∫∫ÁöÑÈïøÂªä ‰∏Ä‰∏™‰∫∫ÁöÑÂ±±Â≤ó ‰∏Ä‰∏™‰∫∫ÁöÑÂú∞ÈìÅ ‰∏Ä‰∏™‰∫∫ÁöÑÊ∏∏‰πêÂú∫ ‰ΩÜ‰ªñ‰æùÁÑ∂‰πêËßÇÔºåÂæÆÁ¨ëÁùÄÔºåÁ≠âÂæÖÁùÄ ÁîüÊ¥ªÈöæÂÖçÊúâÈ£éÈ£éÈõ®Èõ® ‰ªñÊÄªÊòØËÉΩÂ§üËΩªÊùæÁöÑÂ∫îÂØπ Âπ∂‰∏îÈù¢Â∏¶Èò≥ÂÖâ„ÄÅËá™‰ø°ÁöÑÁ¨ëÂÆπ ÁîüÊ¥ª‰πü‰∏ç‰ºöÊÄªÊòØ‰∏ÄÂ∏ÜÈ£éÈ°∫ ‰ΩÜ‰ªñÊØèÊ¨°ÈÉΩËÉΩÂãáÊï¢ÁöÑÈù¢ÂØπÈöèÊó∂ÂáÜÂ§áÊé•ÂèóÁîüÊ¥ªÁöÑÊåëÊàò ÂèØÊòØÊ°¶ÊûóÁöÑÁà±ÊÉÖÂèàÂú®Âì™ÈáåÂë¢Ôºü Âú®ÈïúÂ≠êÈáåÈù¢ÂêóÔºü‰ªñ‰∏çÊï¢Áõ∏‰ø° ‰ªñÂéªÈóÆÂ§ßÊ†ëÔºåÊàëÁöÑÁà±ÊÉÖÂú®Âì™ÈáåÔºüÂ§ßÊ†ëÂëäËØâ‰ªñÔºå‰πüËÆ∏Â∞±Âú®‰∏çËøúÁöÑÂú∞Êñπ ‰∫éÊòØÔºåÊ°¶Êûó‰∏Ä‰∏™‰∫∫ÁªßÁª≠ÂêëÂâçËµ∞Ëµ∞Âú®Ëå´Ëå´ÁöÑÈõ™Âú∞‰∏ä Áõ¥Âà∞Êúâ‰∏ÄÂ§©Ê°¶Êûó‰∏éÊòéÊúàÁõ∏ÈÅá‰∫Ü Ê°¶ÊûóÂñúÊ¨¢ÊòéÊúàÔºåÈùûÂ∏∏ÈùûÂ∏∏ÁöÑÂñúÊ¨¢ÔºåÂõ†‰∏∫ÊòéÊúàÁöÑÂá∫Áé∞ÔºåÊ°¶ÊûóËÑ∏‰∏äÊúâ‰∫ÜÊõ¥Âä†ÁÅøÁÉÇÁöÑÁ¨ëÂÆπ ÂèØÊòØÊòéÊúà‰ºöÂñúÊ¨¢Ê°¶ÊûóÂêóÔºü Ê°¶ÊûóÊÉ≥„ÄÇ„ÄÇ„ÄÇ Ê°¶ÊûóÊÉ≥ÂíåÊòéÊúàÂú®‰∏ÄËµ∑ ÁÑ∂ÂêéÊ°¶Êûó‰ºöÁªèÂ∏∏ÂéªÊâæÊòéÊúà ÁÑ∂Âêé‰∏§‰∏™‰∫∫‰∏ÄËµ∑Âá∫ÂéªÁé© Êôö‰∏äÊ°¶Êûó‰ºöÊääÊòéÊúàÈÄÅÂõûÂÆ∂ Áõ¥Âà∞ÂæàÊôöÊ°¶ÊûóÂÜç‰∏Ä‰∏™‰∫∫ÂõûÂÆ∂ ÁÑ∂ÂêéÈ´òÂÖ¥Âú∞ËøõÂÖ•Ê¢¶‰π°ÔºåÂú®Ê¢¶‰∏≠Ëøò‰ºöÂíåÊòéÊúàÂú®‰∏ÄËµ∑ Ê°¶ÊûóÊÉ≥Êàê‰∏∫‰∫ÜÊòéÊúàÁöÑÈÄõË°óÂä©Êâã ÁÑ∂ÂêéÔºåÊ°¶ÊûóÂíåÊòéÊúà‰∏ÄËµ∑ÂéªÂæàÂ§öÂú∞ÊñπÁé© Ê°¶Êûó‰πüÊÉ≥ÂíåÊòéÊúà‰∏ÄÂùóÊàê‰∏∫‰∏ÄÂØπÂêÉË¥ß ÂÜçÁÑ∂ÂêéÔºå‰ªñ‰ª¨‰ºöÊê¨Âà∞‰∫Ü‰∏ÄËµ∑ ÂÜçÁÑ∂ÂêéÔºåÊòéÊúà‰ºöÂºÄÂßãÂ≠¶‰π†Â•πÁöÑÊäÄËÉΩ ÁÖÆÈ•≠ ÈÇ£Êó∂ÂÄôÔºåÊØèÂ§©Êó©‰∏äÔºå‰ªñ‰ª¨ÂêÉÁùÄËá™Â∑±ÂÅöÁöÑÁæéÈ£ü ÁÑ∂ÂêéÂú®Âêå‰∏Ä‰∏™Á´ôÂè∞ÔºåÈ´òÈ´òÂÖ¥ÂÖ¥ÁöÑ‰∏ÄËµ∑‰∏äÁè≠ Ê°¶Êûó‰ºöÊÑüËßâËá™Â∑±Â•ΩÂπ∏Á¶è„ÄÇÂõ†‰∏∫Ëá™Â∑±Êúâ‰∫ÜÂÆ∂ÈÇ£‰∏™ÊúâÊòéÊúàÂú®ÁöÑÂú∞Êñπ ‰ªñ‰ª¨ÂèØËÉΩÂÅ∂Â∞î‰πü‰ºöÂêµÊû∂ Ê°¶Êûó‰∏çÊÉ≥ËøôÊ†∑ ‰∏ÄÂÆöÊòØÊàëÊúâ‰ªÄ‰πàÂÅöÁöÑ‰∏çÂØπÔºåÊ°¶Êûó‰ºöËøô‰πàÊÉ≥ Â¶ÇÊûúÊ≤°ÊúâÊòéÊúàÂú®Ë∫´ËæπÔºåÁ™óÂ§ñÂ∞±Ê≤°ÊúâÈ£éÊôØ Â¶ÇÊûúÊ≤°ÊúâÊòéÊúàÂú®Ë∫´Âêé Ê°¶ÊûóÂèàÊÄé‰ºöÈ£ûÁöÑÊõ¥È´òÊõ¥Ëøú Ê°¶Êûó‰∏çÊÉ≥ËøôÊ†∑„ÄÇ‰ªñË¶Å‰∏∫ÊòéÊúàÊîπÂèòËá™Â∑±Ê°¶Êûó‰∏çÁü•ÈÅìÊòéÊúàÂñúÊ¨¢‰ªÄ‰πàÔºå‰ΩÜ‰ªñ‰∏ÄÂÆö‰ºöÊª°Ë∂≥Â•πÁöÑ‰∏ÄÂàá„ÄÇ ÊàëÊÑøÊÑè‰∏ÄÁõ¥Èô™‰º¥ÁùÄ‰Ω† Áà±ÊÉÖÂ∞±ÂÉèËä±Ëçâ‰∏ÄÊ†∑ÈúÄË¶ÅÁî®ÂåÖÂÆπÊù•ÊµáÁÅå Áõ¥Âà∞‰∏ÄÂ§©ÔºåÊ°¶Êûó‰∏çÊÉ≥ËÆ©Ëá™Â∑±ÂêéÊÇîÊ°¶ÊûóÂºÄÂßãÂáÜÂ§á‰∏Ä‰ªΩÊÉäÂñú ÁúãÁùÄÊÉäÂñú‰∏ÄÁÇπÁÇπÂáÜÂ§áÂ•Ω‰∫Ü Ê°¶ÊûóÂ•ΩÂºÄÂøÉ Âõ†‰∏∫‰ªñÊÉ≥Ë±°ÁùÄÊòéÊúàÁúãÂà∞Êó∂ ÂºÄÂøÉÁöÑÊ†∑Â≠ê ÊÉ≥ÊÉ≥Êú™Êù•‰ªñ‰ª¨ÊàñËÆ∏ ‰ºöÊúâ‰∏ÄËæàÂ≠ê Ê°¶ÊûóÂ•ΩÂºÄÂøÉ ÊàñËÆ∏‰ªñÂèØ‰ª•ÂíåÊòéÊúà‰∏ÄËµ∑ ÂéªÂÖ®‰∏ñÁïåÂ•ΩÂ§öÂú∞ÊñπÁé© Ê°¶Êûó‰πü‰ºöÁªßÁª≠Âä™Âäõ‰∏∫‰∫Ü‰ªñÂíåÊòéÊúàÁöÑÊ¢¶‰πãÂüéÂ†° Ê°¶ÊûóÂæàÂπ∏Á¶èÔºåÂõ†‰∏∫‰ªñÈÅáÂà∞‰∫ÜÊòéÊúà„ÄÇ‰ªñÁõ∏‰ø°ÂêéÈù¢ÁöÑÊØèÂ§©ÈÉΩ‰ºöÊòØÂø´‰πêÁöÑ ÁÆÄÁÆÄÂçïÂçïÔºå‰Ωì‰ºö‰∏éÊòéÊúàÂú®‰∏ÄËµ∑ÁöÑÊØè‰∏Ä‰∏™Âàª Ê°¶ÊûóÊÉ≥ÂíåÊòéÊúà‰∏ÄËµ∑ËøáÂπ∏Á¶èÁöÑÁîüÊ¥ª Ê∞∏ËøúÊúâÂ§öËøúÔºü ÊØîÊó∂Èó¥Â§ö‰∏ÄÁßíÂ∞±ÊòØÊ∞∏ËøúÔºåÊàë‰ºöÊ∞∏ËøúÁà±‰Ω† ‰∏ñÁïåÊúâÂ§öÂ§ßÔºü ‰Ω†Ëµ∞Âà∞Âì™ÈáåÔºå‰∏ñÁïåÂ∞±ÊúâÂ§öÂ§ß Â¶ÇÊûú‰∏âÂπ¥Âêé‰Ω†Ê≥®ÂÆöÊòØÊàëÂ•≥ÊúãÂèãÔºå‰Ω†‰Ωï‰∏çÊèêÊó©Ë°å‰Ωø‰Ω†ÁöÑÊùÉÂà© ÊàëÁà±‰Ω† I love you ÊàëÁõ∏‰ø°ÔºåÊ°¶ÊûóÂíåÊòéÊúàÁöÑÊïÖ‰∫ã‰ºö‰∏ÄÁõ¥ÁªßÁª≠‰∏ãÂéª„ÄÇ Êó†ËÆ∫Á≤æÂΩ©„ÄÅÂπ≥Ê∑°ÈÉΩ‰ºöÊòØ‰ªñ‰ª¨ÂñúÊ¨¢ÁöÑ„ÄÇ Êú±ÊòéÊúàÔºåÊàëÁà±‰Ω† -- Êåâ‚ÄúEsc\"ÈîÆÊúâÊÉäÂñú ÊÇ®ÁöÑÊµèËßàÂô®Á¶ÅÁî®‰∫ÜjavascriptÔºåÊó†Ê≥ïÊ≠£Â∏∏ÊµèËßàÊú¨È°µÈù¢","link":"/love-ppt/love-story.html"},{"title":"","text":"/*! * Brav1Toolbox.js - common utility scripts and polyfills * http://marcolago.com/ * MIT licensed * * Copyright (C) 2012-2013 Marco Lago, http://marcolago.com */ var Brav1Toolbox=(function(){var d=[\"\",\"-webkit-\",\"-moz-\",\"-ms-\",\"-o-\"];var i;if(window.getComputedStyle){i=window.getComputedStyle(document.body)}else{i=document.documentElement.style}function k(m,o,n,l){if(m.addEventListener){m.addEventListener(o,n,l)}else{if(m.attachEvent){m.attachEvent(o,n)}}}function g(l){return j(l)!=\"\"}function j(o){for(var l=0;l0){m=m.charAt(0).toUpperCase()+m.substr(1)}m=n+m;if(m in i==true){return m}}return\"\"}function e(l){return !!l&&Object.prototype.toString.call(l).match(/(\\w+)\\]/)[1]}function h(m,n){if(m.classList){m.classList.add(n)}else{if(f(m,n)==false){var l=m.className;if(l.length>0){l+=\" \"}m.className=l+n}}}function a(m,n){if(m.classList){m.classList.remove(n)}else{var l=m.className;if(l.indexOf(n)!=-1){if(l.indexOf(\" \"+n)!=-1){l=l.replace(\" \"+n,\"\")}else{if(l.indexOf(n+\" \")!=-1){l=l.replace(n+\" \",\"\")}else{l=l.replace(n,\"\")}}}m.className=l}}function f(l,m){if(l){if(l.classList){return l.classList.contains(m)}else{if(l.className){return l.className.indexOf(m)!=-1}}}return false}function c(l,o){if(document.createEvent){var n=document.createEvent(\"HTMLEvents\");n.initEvent(l,true,true);for(var m in o){n[m]=o[m]}document.dispatchEvent(n)}}function b(m,l){var o;var n;o=l.x-m.x;o*=o;n=l.y-m.y;n*=n;return Math.abs(Math.sqrt(o+n))}return{addListener:k,dispatchEvent:c,testCSS:g,getPrefixed:j,typeOf:e,addClass:h,removeClass:a,hasClass:f,distance:b}})(); /*! * Flowtime.js * http://marcolago.com/flowtime-js/ * MIT licensed * * Copyright (C) 2012-2013 Marco Lago, http://marcolago.com */ var Flowtime=(function(){var l=\"ontouchstart\" in document.documentElement;var aJ=window.history.pushState;var j=\"ft-section\";var aU=\".\"+j;var aM=\"ft-page\";var aK=\".\"+aM;var aG=\"ft-fragment\";var A=\".\"+aG;var ah=\"revealed\";var aI=\"actual\";var ax=\"revealed-temp\";var ak=\"ft-default-progress\";var N=\".\"+ak;var ab=\"ft-section-thumb\";var G=\".\"+ab;var k=\"ft-page-thumb\";var S=\".\"+k;var s=\"flowtimenavigation\";var J=document.querySelector(\".flowtime\");var aL=document.querySelector(\"html\");var u=document.querySelector(\"body\");var aA=false;var ac=\"\";var D={section:0,page:0};var H=false;var aF=document.title;var O;var aN=22;var az=null;var x=false;var p=true;var C=false;var M=false;var av=false;var aX=false;var aE=false;var ao=false;var h=50;var g=50;var T=document.querySelector(\".parallax\")!=null;var I=true;try{var m=document.querySelector(\"html\").className.toLowerCase();if(m.indexOf(\"ie7\")!=-1||m.indexOf(\"ie8\")!=-1||m.indexOf(\"lt-ie9\")!=-1){I=false}}catch(aa){I=false}if(I){Brav1Toolbox.addClass(u,\"ft-absolute-nav\")}var z=(function(){var bN;var bm;var bw;var bJ;var bs;var bC=[];var bt=[];var bB=0;var bZ=0;var bK=0;var bT=0;var bq=0;var bU=0;var bj=0;var bF;function ba(){bm=[];bt=[];bJ=document.querySelectorAll(A);bs=[];bN=J.querySelectorAll(\".flowtime > \"+aU);bw=J.querySelectorAll(\".flowtime \"+aK);for(var b2=0;b2=0&&b0!=true&&b4==false){bV(bT,bq)}else{var b1=0;b1=0;if(b0==true&&bT-1>=0){b1=0}else{if(b0!=true||p==true||bT-1=0;b0--){if(b4[b0]!=undefined){b2=b4[b0];b1=b0;break}}}bq=b1;if(!H){bD()}return bO(b2,b3)}function a9(b0,b1){if(bs[bT][bq].length>0&&bC[bT][bq]0&&bC[bT][bq]>=0&&b0!=true&&b1==false){bV(bT,bq)}else{if(bq==0&&bm[bT-1]!=undefined){bT-=1;bq=bm[bT].length-1}else{bq=Math.max(bq-1,0)}}return bO(bm[bT][bq],b1)}function bO(b0,b1){if(b1==true){bb(b0);return}else{return b0}}function bn(b0,b2,b3){if(b3!=undefined){bC[b0][b2]=b3}else{b3=bC[b0][b2]+=1}for(var b1=0;b1=0){Brav1Toolbox.addClass(bs[b0][b2][b3],aI)}bC[b0][b2]=b3}function bg(){for(var b0=0;b0z.getPageIndex().section||D.page>z.getPageIndex().page){bC[b4][b2]=b0.length-1}else{bC[b4][b2]=-1}}}}}}}}}}}}function bp(b0){if(b0){}return bT}function a8(b0){if(b0){}return bq}function bR(){return bN}function bx(b0){return bm[b0]}function bz(){return bw}function bY(){return bB}function bE(){return bZ}function bA(){return bK}function bL(b2){var b1=bT;var b0=bq;if(b2!=undefined){b1=b2.parentNode.index;b0=b2.index}return{section:b1,page:b0}}function bS(b0){return bN[b0]}function bu(b0,b1){return bm[b1][b0]}function bh(){return bN[bT]}function bP(){return bm[bT][bq]}function bH(){return bs[bT][bq][e()]}function e(){return bC[bT][bq]}function by(){return bT0}function bl(){return bq0}function bG(){if(bT==0&&bq==0){return 0}var b1=0;for(var b0=0;b01){var b1=bm[bT][bq];b2+=\"/\"+d(b1)}return b2}function bc(b4){var b5=aZ(b4);if(b5){var b1=b5.parentNode;for(var b0=0;b0=y){aH();return}else{if(ar0){var e=a8.replace(\"#/\",\"\").split(\"/\");var ba=document.querySelector(aU+\"[data-id=__\"+e[0]+\"]\")||document.querySelector(aU+\"[data-prog=__\"+e[0]+\"]\");if(ba!=null){var a9=null;if(e.length>1){a9=ba.querySelector(aK+\"[data-id=__\"+e[1]+\"]\")||ba.querySelector(aK+\"[data-prog=__\"+e[1]+\"]\")}if(a9==null){a9=ba.querySelector(aK)}return a9}}return}function aQ(){z.update();L(null,true)}function a1(bb){var ba=aF;var e=z.getCurrentPage().getAttribute(\"data-title\");if(e==null){var a9=bb.split(\"/\");for(var a8=0;a8","link":"/love-ppt/all.min.js"},{"title":"","text":"/*! * jQuery JavaScript Library v1.4.2 * http://jquery.com/ * * Copyright 2010, John Resig * Dual licensed under the MIT or GPL Version 2 licenses. * http://jquery.org/license * * Includes Sizzle.js * http://sizzlejs.com/ * Copyright 2010, The Dojo Foundation * Released under the MIT, BSD, and GPL Licenses. * * Date: Sat Feb 13 22:33:48 2010 -0500 */ (function(A,w){function ma(){if(!c.isReady){try{s.documentElement.doScroll(\"left\")}catch(a){setTimeout(ma,1);return}c.ready()}}function Qa(a,b){b.src?c.ajax({url:b.src,async:false,dataType:\"script\"}):c.globalEval(b.text||b.textContent||b.innerHTML||\"\");b.parentNode&&b.parentNode.removeChild(b)}function X(a,b,d,f,e,j){var i=a.length;if(typeof b===\"object\"){for(var o in b)X(a,o,b[o],f,e,d);return a}if(d!==w){f=!j&&f&&c.isFunction(d);for(o=0;o","link":"/love/js/jquery.js"},{"title":"","text":"/*! jQuery v1.8.3 jquery.com | jquery.org/license */ (function(e,t){function _(e){var t=M[e]={};return v.each(e.split(y),function(e,n){t[n]=!0}),t}function H(e,n,r){if(r===t&&e.nodeType===1){var i=\"data-\"+n.replace(P,\"-$1\").toLowerCase();r=e.getAttribute(i);if(typeof r==\"string\"){try{r=r===\"true\"?!0:r===\"false\"?!1:r===\"null\"?null:+r+\"\"===r?+r:D.test(r)?v.parseJSON(r):r}catch(s){}v.data(e,n,r)}else r=t}return r}function B(e){var t;for(t in e){if(t===\"data\"&&v.isEmptyObject(e[t]))continue;if(t!==\"toJSON\")return!1}return!0}function et(){return!1}function tt(){return!0}function ut(e){return!e||!e.parentNode||e.parentNode.nodeType===11}function at(e,t){do e=e[t];while(e&&e.nodeType!==1);return e}function ft(e,t,n){t=t||0;if(v.isFunction(t))return v.grep(e,function(e,r){var i=!!t.call(e,r,e);return i===n});if(t.nodeType)return v.grep(e,function(e,r){return e===t===n});if(typeof t==\"string\"){var r=v.grep(e,function(e){return e.nodeType===1});if(it.test(t))return v.filter(t,r,!n);t=v.filter(t,r)}return v.grep(e,function(e,r){return v.inArray(e,t)>=0===n})}function lt(e){var t=ct.split(\"|\"),n=e.createDocumentFragment();if(n.createElement)while(t.length)n.createElement(t.pop());return n}function Lt(e,t){return e.getElementsByTagName(t)[0]||e.appendChild(e.ownerDocument.createElement(t))}function At(e,t){if(t.nodeType!==1||!v.hasData(e))return;var n,r,i,s=v._data(e),o=v._data(t,s),u=s.events;if(u){delete o.handle,o.events={};for(n in u)for(r=0,i=u[n].length;r","link":"/love-ppt/jquery.min.js"}],"posts":[{"title":"COMP 367 notes","text":"COMP 367: Techniques in Symbolic Computation Maple Software Maple commands Lecture 1 Division Theorem: b = q*a + r, 0&lt;=r&lt;a, q&gt;=0 and a, b&gt;0 a is divisor, b is divident, q is quotient, r is remainder a divides b is a|b , also called a is a divisor of b or a is a factor of b GCD (greatest common divisor) gcd(30,45) common multiple 45 is a common multiple of 5 and 3. c = ab, (45 is c, 5,3=a,b) prime: only two divisors: 1 and itself ithprime(1003) seq(ithprime(i),i=1..10) coprime: if (a,b) = 1 (lecture 2) ar + bs = 1 Euclid‚Äôs Algorithm: get quotient: irem(365,121,'q') or iquo(365,121) use list to calculate:( order is not important!!! ) EA := l::list-&gt;[l[2],l[1]-l[2]*iquo(l[1],l[2])]; l1 := EA([aaa, bbb]) l2 := EA(l1) use do-loop:12345l_n := EA([111,2222]);do l_n := EA(l_n)until l_n[2] = 0:l_n; need check with gcd(a,b) Lecture 2 Bezout‚Äôs Identity: if (a, b)=d then d = at + bs for some integers t and s Extended Euclid‚Äôs Algorithm r = xa + yb find row1 and row2 row1 := [y, 0, 1]; row2 := [x, 1, 0]; find 3rd and etc. row3 := row1 - iquo(row1[1],row2[1])*row2 continue to other lines another function: EEA := (l1,l2)-&gt;l1-l2*iquo(l1[1],l2[2]); can use do-loop:12345678k := 0:m := 2:do k:=k+1: m:=m+1: row||m := EEA(row||k, row||(k+1)); print(row||m)until row||m[1]=0: EEA := Matrix(4,3,[row1,row2,row3...]) until the remainder of row is 0. Corollary 8: if a divides bc and (a,b)=1, then a divides c Diophantine Equations: a*x + b*y = c is a linear Diophantine Equation question is find a solution of the equation use EEA function and steps above For General solution when row is like [0, z, w], then x0=zk, y0=wk where k is any integer. z need positive(+), if z is negative(-), exchange z and w such as [0, -9, 2]-&gt; z=9, w=-2 1 = 2x+ y to find = 22, need to multiple 22, then 22 = (2*22)x + (22)y the general solution is x=(2*22) + z , y = 22 + w Factorization: Induction Theorem: Let P(n) be a statement that is defined for any integer n&gt;= n0; (1) P(n0) is true (2) if P(n) is true for some n&gt;=n0, then P(n+1) is also true. ifactor(45); such as (3)^2(5) Least Common Multiple (LCM): Proposition: [a,b]=(a*b)/(a,b) lcm(210,126); result is 630. Lecture 3Congruences Congruence Modulo m 143 mod 14, -5 mod 10 evalb(16 mod 5 = 31 mod 5) is true properties: Proposition: ex: Linear Congruencies and Bezout‚Äôs Identity ex2: ex3: Proposition 19: ex: Systems of Congruences: Basic properties of congruences: properties: ex: Proposition: Application of the exponentiation:","link":"/2021/01/24/COMP-367-notes/"},{"title":"Database SQL Q&amp;A 1","text":"First COMP 353 database Q&amp;A Database SQL question:The database schema for a community operated barter, announcement and giveaway system,contains among others, the following relations: Member (ID, Name, Address, City, Prov, PCode, Country, PhoneNo, Email) CreditCard (MemberID, CardNo, CardID, ExpDate) CardHolder (CardNo, HolderName, Address, City, Prov, PCode, Country, PhoneNo, Email) Listing (ListingID, MemberID, ListingType, PostingDate, Duration) Here the relation Member contains the details of a member of the system. Each member register information about a credit card (credit card number and the card identification number and the expiry date) for charging the annual membership fees and other charges. The credit card may belong to the member or some other person; details of the holder are given in the relation CardHolder. A member may make one of more listing to offer a service or article for barter, sell or giveaway (ListingType). Each such Listing has a posting date and Duration(days being 7, 15, 30, or 60). (Note: Associated with each listing is description. These details should be stored in a separate tables which are not included here. ) Q: Creating tables corresponding to these relations with appropriate domains and populate them with representative data.Use these tables to write SQL query to answer the following queries. 1. Create a database called barter, then use it:12345--create a database bartercreate database barter;--use the database barteruse barter; 2. Create table Member1234567891011121314CREATE TABLE Member( ID INT NOT NULL, Name VARCHAR(30) NOT NULL, Address VARCHAR(80) NOT NULL, City VARCHAR(30) NOT NULL, Prov VARCHAR(30) NOT NULL, PCode VARCHAR(10) NOT NULL, Country VARCHAR(30) NOT NULL, PhoneNo VARCHAR(30) NOT NULL, Email VARCHAR(40), PRIMARY KEY (ID) ); desc Member; insert 5 to 10 tuples into table Member123456789101112131415insert into member values(11111, 'Jack', 'address 1', 'Montreal', 'Quebec', 'QC', 'Canada', '514-111-1111', '11111@gmail.com');insert into member values(22222, 'Tom', 'address 2', 'Laval', 'Quebec', 'QC', 'Canada', '514-222-2222', '22222@gmail.com');insert into member values(33333, 'Peter', 'address 3', 'Montreal', 'Quebec', 'QC', 'Canada', '514-333-3333', '33333@gmail.com');insert into member values(44444, 'Frank', 'address 4', 'Brossard', 'Quebec', 'QC', 'Canada', '514-444-4444', '44444@gmail.com');insert into member values(55555, 'John', 'address 5', 'Toronto', 'Ontario', 'ON', 'Canada', '555-555-5555', '55555@gmail.com');insert into member values(66666, 'Mike', 'address 6', 'Laval', 'Quebec', 'QC', 'Canada', '514-666-6666', '66666@gmail.com');--for test credit card's name is not the same as the member's nameinsert into member values(77777, 'Tony', 'address 7', 'Laval', 'Quebec', 'QC', 'Canada', '514-777-7777', '77777@gmail.com');insert into member values(88888, 'Trudeau', 'address 8', 'Ottawa', 'Ontario', 'ON', 'Canada', '555-888-8888', 'Trudeau@gmail.com');--for test the member without listinginsert into member values(99999, 'nolisting', 'address 9', 'Sherbrook','Quebec', 'QC', 'Canada', '450-999-9999', '99999@gmail.com'); 3. Create table CreditCard12345678910CREATE TABLE CreditCard( MemberID INT NOT NULL, CardNo INT NOT NULL, CardID INT NOT NULL, ExpDate VARCHAR(10), PRIMARY KEY (CardNo), FOREIGN KEY (MemberID) REFERENCES Member(ID));desc creditcard; insert 5 to 10 tuples into table CreditCard12345678insert into creditcard values(11111, 112345, 1, '01/20');insert into creditcard values(22222, 122222, 2, '02/20');insert into creditcard values(33333, 133333, 3, '03/20');insert into creditcard values(44444, 144444, 4, '04/20');insert into creditcard values(55555, 155555, 5, '05/20');insert into creditcard values(66666, 166666, 6, '06/20');insert into creditcard values(77777, 177777, 7, '07/20');insert into creditcard values(88888, 188888, 8, '08/20'); 4. Create table CardHolder12345678910111213CREATE TABLE CardHolder( CardNo INT NOT NULL, HolderName VARCHAR(30) NOT NULL, Address VARCHAR(80) NOT NULL, City VARCHAR(30) NOT NULL, Prov VARCHAR(30) NOT NULL, PCode VARCHAR(10) NOT NULL, Country VARCHAR(30) NOT NULL, PhoneNo VARCHAR(30) NOT NULL, PRIMARY KEY (CardNo));desc CardHolder; insert 5 to 10 tuples into table CardHolder1234567891011121314--insert 5 to 10 tuples per tableinsert into CardHolder values(112345, 'Jack', 'address 1', 'Montreal', 'Quebec', 'QC', 'Canada', '514-111-1111');insert into CardHolder values(122222, 'Tom', 'address 2', 'Laval', 'Quebec', 'QC', 'Canada', '514-222-2222');insert into CardHolder values(133333, 'Peter', 'address 3', 'Montreal', 'Quebec', 'QC', 'Canada', '514-333-3333');insert into CardHolder values(144444, 'Frank', 'address 4', 'Brossard', 'Quebec', 'QC', 'Canada', '514-444-4444');insert into CardHolder values(155555, 'John', 'address 5', 'Toronto', 'Ontario', 'ON', 'Canada', '555-555-5555');insert into CardHolder values(166666, 'Mike', 'address 6', 'Laval', 'Quebec', 'QC', 'Canada', '514-666-6666');--for test credit card's name is not the same as the member's nameinsert into CardHolder values(177777, 'not_Tony', 'address 7', 'Laval', 'Quebec', 'QC', 'Canada', '514-777-7777');insert into CardHolder values(188888, 'not_Trudeau', 'address 8', 'Ottawa', 'Ontario', 'ON', 'Canada', '555-888-8888'); 5. Create table Listing1234567891011CREATE TABLE Listing( ListingID INT NOT NULL, MemberID INT NOT NULL, ListingType VARCHAR(30) NOT NULL, PostingDate VARCHAR(30) NOT NULL, Duration INT NOT NULL, PRIMARY KEY (ListingID), FOREIGN KEY (MemberID) REFERENCES Member(ID));desc Listing; insert 5 to 10 tuples into table Listing 12345678910111213insert into Listing values(00001, 11111, 'sell', '2020/10/01', 7);insert into Listing values(00002, 22222, 'sell', '2020/10/02', 15);insert into Listing values(00003, 33333, 'giveaway', '2020/10/03', 15);insert into Listing values(00033, 33333, 'giveaway', '2020/08/03', 30);insert into Listing values(00004, 44444, 'giveaway', '2020/10/04', 7);--for test if one person has more listingsinsert into Listing values(00005, 55555, 'giveaway', '2020/10/05', 30);insert into Listing values(000051, 55555, 'giveaway', '2020/09/05', 7);insert into Listing values(00006, 66666, 'sell', '2020/10/06', 30);insert into Listing values(00007, 77777, 'sell', '2020/10/071', 7);insert into Listing values(00008, 88888, 'sell', '2020/10/08', 15); SQL query: Find the names of Members from Montreal.123456select name from member where city like ('Montreal');/* Another solution:select distinct(name) from member where city like ('Montreal');select name from member where city = 'Montreal';*/ List the Names and Cities of members along with the listings they have posted.12select name, city, listing.* from member, listing where memberid = id; For all giveaway type listing from members in Montreal, list the members name and dates of the listings.12select m.name, L.postingdate from member m, listing L where m.city='Montreal' and m.id=L.memberid and L.listingtype='giveaway'; List the pairs of names where the first name is the holder of the credit card and the second name is that of a member who uses this credit card and these names are not the same.1select h.HolderName, m.name from CardHolder h, Member m, CreditCard c where m.id=c.memberid and c.cardno=h.cardno and h.HolderName != m.name; Repeat above where the names are the same, limiting the list to the members who live in Laval.1select h.HolderName, m.name from CardHolder h, Member m, CreditCard c where m.id=c.memberid and c.cardno=h.cardno and h.HolderName=m.name and m.city='Laval'; Find the members with the largest number of listings.123select * from member where id in ( select MemberID from Listing group by MemberID having COUNT(*) &gt;= all(select COUNT(*) as count from Listing group by MemberID));--we can test the other special case by inserting more tuples to listing table Find the members with no listings.12select * from member where ID NOT IN (select DISTINCT(MemberID) from Listing); We can add more tuples into these tables to test them in MySQL.","link":"/2020/10/22/Database-SQL-Q-A-1/"},{"title":"ENGR 233 winter 2021","text":"[Attention]I collect ENGR 233 course‚Äôs info to review conveniently.If it has some copyright issues, please contact me so that I will delete it. Textbook:Advanced Engineering Mathematics, by Dennis G. Zill and Warren S. Wright, 6th Edition1, Published by Jones and Bartlett. Grading Scheme: Assignments (WeBWorK) 10% Team projects (2) 10% (5% each, 1 hour; during tutorials in teams of 2 or take home; online) Term tests (2) 40%, (20% each, during lectures or tutorials in COLE) Final exam 40% (2 to 3 hours in COLE) Course Description:This course introduces first year engineering students to multivariable calculus and its applications to mathematical models.The main topics include: Vector functions; Functions of several variables; Differential vector calculus; Integralcalculus for vectors; Double and triple integrals; Line and surface integrals; Stokes‚Äô Theorem; Divergence Theorem;Applications in applied science and engineering. ENGR 233 winter 2021Week 1 Jan 11:Review of the following topics: 7.1 Vectors in 2-space; problems: 1,21,30,41,50 7.2 Vectors in 3-space; 11,24,32,34,52 7.3 Dot product: 12,15,23,29,31, 41,48 7.4 Cross product: 3,13,22,28,41,42,45,49,52 Lecture 1. Vectors in the plane and in the space Lecture 1 (cont.) Dot product Lecture 2. Signed area Lecture 3. Cross-product Tutorial 1: Week 2 Jan 18: 7.5 Lines and planes in space: 5,12,17,24,33,36,39,49,57,61,66,75 9.1 Vector functions: 1,4,10,18,25,34,3639,42,45 Lecture 4. Lines and planes Lecture 5 Vector functions Lecture 6 Some dynamical problems Tutorial 2: Week 3 Jan 25: 9.2 Motion on a curve: 4,9,11,13,14,19,22,27,28,29 9.3 Curvature. Components of Acceleration: 1,6,9,16,17,20,23 Lecture 7 Curvature: Lecture 7.2 Acceleration decomposition Lecture 7.3 Osculating circle Tutorial 3 Week 4 Feb 1: 9.4 Partial derivatives: 2,3,6,9,15,21,24,26,27,36,39,42,48,49,51,55,56,57 9.5 Directional derivative: 3,6,12,14,15,18,24,27,28,33,41,4344 Lecture 8 Partial derivatives Lecture 9 Gradient and Directional derivatives Tutorial 4: Week 5 Feb 8: 9.6 Tangent planes and normal lines: 3,4,14,15,25,34,39 9.7 Curl and Divergence: 7,11,15,21,24,27,30,39,40,43,44 Lecture 10 Tangent lines and planes Lecture 11 Higher order partial derivatives Lecture 12 Vector fields Divergence Lecture 13 Curl of a velocity field Tutorial 5Week 6 Feb 15: 9.8 Line integrals 3,6,9,15,21,25,27,28,30,33,36,40 9.9 Independence of path 3,6,15,18,21,24,26,27,28,30 Week 7 Feb 22: 9.10 Double integrals: 3,5,9,15,18,21,24,27,33,36,39,42,45,52,62,65,68 Week 7: Term Test 1 (1-hour exam during ) on material Chap 7 + Sections 9.1 through 9.7 Week 8 Mar 8: 9.11 Double integral in polar coordinates: 3,6,11,12,19,24,27,29,30,33,34 9.12 Green‚Äôs theorem: 3,4,6,8,12,18,19,23,24,25,27,33 Week 9 Mar 15: 9.13 Surface Integrals: 2,4,6,8,10,11,15,17,18,24,28, 29,32,33,36,37,39 Week 10 Mar 22: 9.14 Stokes theorem: 3,4,6,9,10,12,13,14,18 Week 10: Term Test 2 (1-hour exam during ) on material of Section 9.8 through Section 9.13 Week 11 Mar 293: 9.15 Triple Integrals: 3,6,9,13,14,15,21,23,24,27,32,34,45,48, Week 12 Apr 54: 9.15 Triple Integrals: 51,54,57,68,69,72,75,76,78,81 9.16 Divergence theorem: 2,3,6,9,11,12,13,15,17,21,22 Week 13 Apr 12: 9.17 Change of variables in multiple integral: 3,5,7,8,9,10,13,15,17,22,23,25,27 Time permitted: Review: 1-20,24,26,29,30,32,36,38,43,46,50,51,53,54,56,57,58,60,63,65","link":"/2021/01/14/ENGR-233-winter-2021/"},{"title":"Hexo-Theme","text":"My first hexo theme. Welcome to Hexo!I choose hexo-theme-archer as my theme. Quick StartCreate a new theme In the root of Hexo Directory 1$ npm i hexo-generator-json-content --save &amp;&amp; npm i --save hexo-wordcount &amp;&amp; git clone https://github.com/fi3ework/hexo-theme-archer.git themes/archer --depth=1 Change _config.yml of Hex Directory, and theme is archer 1theme: archer add supports of sidebar, change _config.yml of Hexo Directory 123456789101112131415161718jsonContent: meta: true pages: false posts: title: true date: true path: true text: false raw: false content: false slug: false updated: false comments: false link: false permalink: true excerpt: false categories: true tags: true More info:set about page create a new page in Hexo Directory1hexo new page &quot;about&quot; add info to source/about/index.md12345--- title: about layout: about--- description set in _config.yml of theme123about: enable: true image: '/intro/about-page.jpg' set 404 pageMore info please read in GitHub hexo-theme-archer","link":"/2020/10/21/Hexo-Theme/"},{"title":"How to create Hexo","text":"introduce how to use hexo theme Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2020/10/21/How-to-create-Hexo/"},{"title":"MAST 234 Notes","text":"Mast 234: Linear Algebra &amp; Applications Maple software Maple commands Linear Algebra &amp; Applications Remember with(LinearAlgebra) Lecture 1 review of systems of linear equations any row-equivalent matrix has one and only one reduced row echelon form A := Matrix(3,3,[1,2,3,4,5,6,7,8,0]) 3x3 Matrix A := RowOperation(A1, [1,2], 1/c) ReducedRowEchelonForm(A) can use vectors together ReducedRowEchelonForm(&lt;u|v|w|x|y|z&gt;);to check if it is in the span GaussianElimination(A) GenerateMatrix([eq1,eq2,eq3], X) check the point(1,3,2) is a solution of the equations subs([x1=1,x2=3,x3=2],[eq1,eq2,eq3,eq4]) C1 = Column(A,1) or C1,C2,C3 = Column(A, 1..3) ReducedRowEchelonForm(&lt;A|b&gt;) Lecture 2 vectors, matrices, spans vectors: Column: X := &lt;x1,x2,x3&gt;, Vector([y1,y2,y3]) row: Vector[row]([1,c,3]) Matrix equations as Linear combination of vectors AX = b = x1C1 + x2C2 + X3C3 (Linear combination) ReducedRowEchelonForm(&lt;c1|c2|b&gt;) get x1,x2 if has solution, then b = c1x1 + c2x2, check AX=b check AX=b: x1*Column(A,1)+x2*Column(A,2)+x3*Column(A,3) = b; 3 types of matrix no solution -&gt; inconsistent, such as 0 = 1 after use RREF (ReducedRowEchelonForm) unique solution -&gt; consistent infinite solution -&gt; consistent, such as 0 = 0 of x2 then x2 is a free variable. use ReducedRowEchelonForm and GaussianElimination to check if the system is consistent or not and solutions. spans of vector sets Span{C1,C2‚Ä¶Cn} = {a1C1 + a2C2 +‚Ä¶ + anCn} eg. span(u,v), u=(1,0), v=(0,1) is xu+yv=(x,y): an entire space R^2!!! can use vectors together ReducedRowEchelonForm(&lt;u|v|w|x|y|z&gt;);to check if it is in the span Transpose function: Transpose(Matrix)` M = &lt;&lt;1,2,3&gt;|&lt;4,5,6&gt;&gt; : 3X2 M^T = &lt;&lt;1,4&gt;|&lt;2,5&gt;|&lt;3,6&gt;&gt; : 2X3 Matrix multiplication is use dot . not star * differently A . X = v; example: Lecture 3 Linear dependence of vectorsHomogeneous System, Kernel, Rank linearly dependent/independent linearly dependent: of there exists a non-trivial (non all zero) solution to the vector equation c1u1 + c2u2 +...+ cnun = 0 linearly independent: only the trivial solution (c1=c2=‚Ä¶=cn=0) Homogeneous system of equations: a system of linear equations AX=0 A is a m X n matrix 0 vector is an m-dimensinal zero-vector any homogeneous system is always consistent, since it has at least one solution (trivial solution) the column of vectors of matrix A form a linearly dependent if the linear system AX=0 has a free variable. Otherwise, the column vectors of A are linearly independent Kernel (Null space) of the matrix A Ker(A) = {X: A.X=0} = Null(A) Ker(A) is never an empty set since it contains at least the zero vector 0 !!! Example: Theorems: Exercise: Linear dependence/independence of Vectors Exercise: example2: Example 3: Theorems: Rank The rank of a matrix A is the number of non-zero rows in its row echelon form, r = Rank(A) Example: Exercise: Â¶ÇÊûúÂê´ÊúâparameterÔºåË¶Å‰ΩøÁî®GaussianElimination() ÈúÄË¶ÅcheckÔºåÂΩìu=0Êó∂ÂÄôÔºåÂú®‰πãÂâçÁöÑÈ¢òÁõÆÈáåÂ∑≤ÁªèÁü•ÈÅìRank(B)=3 some important Theorems:","link":"/2021/01/23/MAST-234-Notes/"},{"title":"Python Spider to Crawl PangziTV","text":"use python to crawl TV, movies, and photos‚Ä¶ Web spiderThe project is to learn how to crawl info by python. GitHub link of the code PangziTV top movies download finish download image and link and movies list create a markdown file to show the movies list and links save images of movies trying to download movies (finished) see pangzitv spider version 2 Install instruction for Mac using code sudo python3 -m before pip codes to install requests lib in python 3 instead of default python 2 in Mac 123sudo python3 -m pip install requestssudo python3 -m pip install beautifulsoup4sudo python3 -m pip install lxml Attention: some files need to set privilege of read &amp; write for specific user!!! some bugs are tab &amp; space issues in vscode copy python file in your dir (such as Hexo blog dir) and change it to run. Don‚Äôt forget to fake headers123456headers = { # fake a browser 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36', } try: response = requests.get(url, headers=headers) Some main codesUse requests to analyze the url1234url = 'https://xxxxxxxxxxx'html = request_url(url)soup = BeautifulSoup(html, 'lxml')test_print(soup) change location123# create a new dir to store imagesdir_url = './Python-Spider-to-Crawl-PangziTV/'os.makedirs(f'{dir_url}', exist_ok=True) some main methodsGet specific info by analyzing the HTML code of website123456789101112131415161718192021222324def test_print(soup): # find list info from panzitv.com, according to analyse site's html list = soup.find(class_='imglist02 cl').find_all(class_='imgItemWrp') # use global index global temp_index # to complete image url image_pre = 'https://www.pangzitv.com' for item in list: item_name = item.find(class_='name').string item_img_url = item.find('a').find('img').get('src') item_link = item.find(class_='name').get('href') # use f to change int type into string temp_index = temp_index + 1 print(f'Num {temp_index}' + ' | '+ item_name + ' | ' + item_img_url + ' | ' + item_link ) # set full image url to download image_url = image_pre + item_img_url movie_link = image_pre + item_link # request_download(image_url, temp_index) # show downloader progress bar and download sth downloader_url(temp_index, image_url, item_img_url, item_name, dir_url, movie_link) save text file method (can modify for Hexo Blog)1234567def save_info_txt(temp_index, item_name, location_url, movie_link): my_file_name = 'my_info_file.md' # add info in the back of the file, if not exist, create new file my_info_file = open(my_file_name, 'a') total_info = '### ' + str(temp_index) + ': [' + item_name + '](' + movie_link +')\\n' + '![](' + location_url + ')\\n' my_info_file.write(total_info) my_info_file.close() download images method12345678910111213141516171819# downloader methoddef downloader_url(temp_index, image_url, item_img_url, item_name, dir_url, movie_link): download_url = image_url filename = item_img_url.split('/')[-1] # save images my_location = f'{dir_url}/{filename}' # save info in text # Hexo Blog only needs filename, since it can find its director automatically! location_url = f'{filename}' # need to change for markdown image is this format save_info_txt(temp_index, item_name, location_url, movie_link) # such image files (no txt file) use b to binary store r = requests.get(download_url) with open(my_location, 'wb') as f: f.write(r.content) download movies methods trying solve download methods‚Ä¶ Get m3u8 encode link decode by base64decode and urllib-&gt;parse.unquote(str) more practice Regex expression use split and regex to get valid filename and url write non-txt file by ab which b means binary debug correct store path download all *.ts file MacOs : use ffmpeg to merge all *.ts files to .mp4 file ffmpeg use brew install ffmpeg delete all .ts files after merge done fix some bugs during running time add progress bar function Import all packages by python1234567891011121314import requestsfrom bs4 import BeautifulSoupimport xlwt # for execl fileimport os# import my classimport sys# sys.path.append('ÈúÄË¶Å‰Ωú‰∏∫Ê®°ÂùóÂºïÂÖ•ÁöÑË∑ØÂæÑ')# sys.path.append(&quot;./&quot;)import re # for regeximport base64 # for base64decode# import html # for unescapeimport timeimport globfrom urllib import parse Some codes about extract and download ‚Äò.ts‚Äô files, merge them, and delete them123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156# implement download m3u8 filesdef get_m3u8_url_decode(soup_my_url): # find unescape url, use regex to find list = soup_my_url.find(class_='clear pl-play js-addDanmu').find_all('script') # print(list[0]) m3u8_file_name = soup_my_url.find('h3').string print('File name: ' + m3u8_file_name) # create a dir os.makedirs(f'{dir_download_url}/{m3u8_file_name}', exist_ok=True) file_path = f'{dir_download_url}/{m3u8_file_name}' print('[Create a new dir success!]') # spilt the encoded mac_url, list[0] is not a string type, re.findall returns a list encode_url = re.findall(r'unescape\\(base64decode\\(.+\\'', str(list[0]), re.M | re.VERBOSE | re.DOTALL) # print(encode_url[0]) # 1. split unescape(base64decode(, get mac_url including '' quote split_encode_url = encode_url[0].split('unescape(base64decode(')[-1] # print(split_encode_url) # 2. decode base64, then 3. unescape this url decode_base64_url = base64.b64decode(split_encode_url) # print(decode_base64_url) unescape_url = parse.unquote(str(decode_base64_url)) # print(unescape_url) # 4. need split again '#part 2$' # real_url = unescape_url.split('#') # print(real_url) # 5. use list to get all url all_parts_list = [] # for part_url in real_url: # add all elements into list # all_parts_list.append(part_url.split('$')[-1]) # update 5: find all valid http url all_parts_list = re.findall(r'(https:.*\\.m3u8)', str(unescape_url), re.M) print('[Debug] Download File parts: ') print(all_parts_list) # get all ts files of m3u8 for i in range(len(all_parts_list)): all_parts_info = all_parts_list[i] get_ts_files(all_parts_list[i], i, file_path) # get_ts_files(all_parts_list[0], 0, file_path)def get_ts_files(parts_info, i, file_path): # create a dir os.makedirs(f'{file_path}/{i}', exist_ok=True) # find all info from m3u8_url # test_url = 'https://cdn9.pztv.ca/upload/20210101/d6dfa215e40c638bfa04beae6d037adc/d6dfa215e40c638bfa04beae6d037adc.m3u8' test_url = parts_info print(test_url) # get content of test_url all_content = request_url(test_url) # print(all_content) # for line in file_line: # print(line) # write a m3u8 file with open(f'{file_path}/{i}/part{i}.m3u8', 'w') as f: f.write(all_content) print('[success download m3u8]') # get each ts url # read each line tslist = [] test_main_url = test_url print('[Test Url]: ' + test_main_url) file_line = all_content.split('\\n') for line in file_line: if re.match('[^#]', line): # use regex to replace the last '/' content # print(line) # re.sub return a str new_test_url = re.sub(r'[^\\/]+(?!.*\\/)', f'{line}', test_main_url) # print(new_test_url) tslist.append(f'{new_test_url}') # print(line[-6:]) # get string from end, has bug for diff length of xxx.ts, xxxx.ts # print(tslist) print('[Num tslist]: ' + str(len(tslist))) # ask if it starts downloading ask_start = input('Would you like to download now? (y/n): \\n') if ask_start == 'y': # download each ts file download_ts_files(tslist, file_path, i) else: # no download print('you can download later...') sys.exit(0)# download each ts filedef download_ts_files(tslist, file_path, i): for item_ts in tslist: ts_name = item_ts.split('/')[-1] # download file path ts_file_path = f'{file_path}/{i}/{ts_name}' # call request content method print('[Prepare File Name]: ' + f'{ts_name}') request_url_content(item_ts, ts_file_path) # print('[downloaded]' + f'{ts_name}') # create new file # with open(f'{file_path}/{i}/{ts_name}', 'ab') as f: # f.write(ts_content) # print('[success download]' + f'{ts_name}') # when finish, ask if start merge ts file is_merge = input('Downloaded all ts files, start merge now? (y/n)\\n') if is_merge == 'y': # call merge method merge_file_name = f'part{i}' new_file_path = f'{file_path}/{i}/' merge_ts(new_file_path, merge_file_name) else: print('Finished, you can use merge_ts.py to merge them later!\\n') sys.exit(0)# merge ts file methoddef merge_ts(new_file_path, merge_file_name): &quot;&quot;&quot; use cmd to merge file &quot;&quot;&quot; tsPath = new_file_path #Ëé∑ÂèñÊâÄÊúâÁöÑtsÊñá‰ª∂ path_list = os.listdir(f'{tsPath}') #ÂØπÊñá‰ª∂ËøõË°åÊéíÂ∫èÂπ∂Â∞ÜÊéíÂ∫èÂêéÁöÑtsÊñá‰ª∂Ë∑ØÂæÑÊîæÂÖ•ÂàóË°®‰∏≠ path_list.sort() li = [os.path.join(tsPath,filename) for filename in path_list if '.ts' in filename] #Â∞ÜtsË∑ØÂæÑÂπ∂ÂêàÊàê‰∏Ä‰∏™Â≠óÁ¨¶ÂèÇÊï∞ tsfiles = '|'.join(li) # print(tsfiles) #ÊåáÂÆöËæìÂá∫Êñá‰ª∂ÂêçÁß∞ saveMp4file = tsPath + f'{merge_file_name}.mp4' #Ë∞ÉÂèñÁ≥ªÁªüÂëΩ‰ª§‰ΩøÁî®ffmpegÂ∞ÜtsÂêàÊàêmp4Êñá‰ª∂ cmd = 'ffmpeg -i &quot;concat:%s&quot; -acodec copy -vcodec copy -absf aac_adtstoasc %s'% (tsfiles,saveMp4file) os.system(cmd) # check if delete ts files delete_file = input('Would you like to delete all ts files? (y/n): \\n') if delete_file == 'y': remove_ts(tsPath) else: print('you can delete later......') sys.exit(0)def remove_ts(tsPath): for inline in glob.glob(os.path.join(tsPath, '*.ts')): os.remove(inline) print('finish delete ts files!') some advices run python file to update info from website copy markdown file into blog need delete my_info_file, since it will be generated a Blog monthly or daily to update my_info_file Demo Crawling movies list, links, and images of 1 page1: Âª∂Á¶ßÊîªÁï•HD 2: Â¶ÇÊáø‰º†HD 3: Êâ∂Êëá 4: Áü•Âê¶ÔºüÁü•Âê¶ÔºüÂ∫îÊòØÁªøËÇ•Á∫¢Áò¶ DVDÁâà 5: ÁöìÈïß‰º† DVD 6: Â∫Ü‰ΩôÂπ¥ 1080PËìùÂÖâ 7: ÈÇ£Âπ¥Ëä±ÂºÄÊúàÊ≠£ÂúÜ 8: ÂÄöÂ§©Â±†ÈæôËÆ∞ 9: ÈÉΩÊå∫Â•Ω 10: Â∞ÅÁ•ûÊºî‰πâDVD 1080P 11: Â∞ÜÂ§ú1 DVD 12: ÁêÖÁêäÊ¶ú‰πãÈ£éËµ∑ÈïøÊûó 13: ÁõóÂ¢ìÁ¨îËÆ∞Â∞ëÂπ¥ÁØá‰πãÊ≤ôÊµ∑ 14: Â∞èÊ¨¢Âñú 15: ÂÆ∏Ê±êÁºò 16: ÈôàÊÉÖ‰ª§ 17: Âè§Ëë£Â±Ä‰∏≠Â±Ä DVDÁâà 18: ÁôΩÂèë/ÁôΩÂèëÁöáÂ¶É/ÁôΩÂèëÁéãÂ¶É 19: Â∞èÂ•≥Ëä±‰∏çÂºÉ DVD 20: ‰∏ÄËµ∑ÂêåËøáÁ™ó Á¨¨‰∫åÂ≠£ 21: ‰∏âÁîü‰∏â‰∏ñÂçÅÈáåÊ°ÉËä± 22: ÂÖ®ËÅåÈ´òÊâã 23: ‰πùÂ∑ûÊµ∑‰∏äÁâß‰∫ëËÆ∞ 24: ÈªÑÈáëÁû≥ 25: ÁÉàÁÅ´Â¶ÇÊ≠å 26: ‰∫≤Áà±ÁöÑÔºåÁÉ≠Áà±ÁöÑ 27: Â§ßÊ±üÂ§ßÊ≤≥ DVDÁâà 28: ‰∏úÂÆ´ 29: ÁõóÂ¢ìÁ¨îËÆ∞2‰πãÊÄíÊµ∑ÊΩúÊ≤ô&amp;Áß¶Â≤≠Á•ûÊ†ë 30: Ê≤≥Á•û1","link":"/2021/01/02/Python-Spider-to-Crawl-PangziTV/"},{"title":"Markdown notes","text":"MarkDown Codes notes‚Ä¶ MarkDown Codes notessome incorrect code show code123456//when you use ```code ```//if the end ``` following a space//it can cause errors\\```markdownend ``` not following a Space\\``` Here is cheat sheet from GitHub MarkDown cheatsheet online Adding Embedded YouTube Videos and musicClick share button, copy Embedded code in your markdown, such as: 1&lt;iframe width=&quot;560&quot; height=&quot;400&quot; src=&quot;https://www.youtube.com/embed/-0c8PXddYJQ&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt; Here is a Youtube tutorial: You can change the value of width and height for dynamic layout. Also, The method of adding embedded music is the same.","link":"/2020/10/25/Markdown-notes/"},{"title":"SOEN 321 materials","text":"[Attention]I collect SOEN 321 course‚Äôs info to review conveniently.If it has some copyright issues, please contact me so that I will delete it.total 5 quizes: quiz 1 - Feb-12-2021 quiz 2 - unknown-2021 quiz 3 - unknown-2021 quiz 4 - unknown-2021 quiz 5 - unknown-2021 SOEN 321 Information Systems SecurityLectures Lecture 1 Lecture 2 Lecture 3 Lecture 4 Lecture 5 Lecture 6 Lecture 7 Lecture 8 Exercises with solutions exercise 1 exercise 2 exercise 3 exercise 4 exercise 5 exercise 6 Tutorials: (updating) tutorial 1 tutorial 2 tutorial 3","link":"/2021/01/29/SOEN-321-materials/"},{"title":"git-cheat-sheet","text":"Git cheatsheet Git-Cheat-SheetA cheat sheet for uncommon Git commands Configuration Command Description git config --global user.name &quot;foo&quot; Set user name git config --global user.email &quot;foo@example.com&quot; Set user email Branches Command Description git branch foo Create a new branch git branch -d foo Deletes a branch git switch foo Switch to a branch git switch -c|--create foo Create and switch to a branch git checkout foo.js Undo all changes on the foo.js file git checkout foo Use git switch instead git checkout -b foo Use git switch -c instead git merge foo Merge branch into current branch Pulling Command Description git pull --rebase --prune Get latest, rebase any changes not checked in and delete branches that no longer exist Staged Changes Command Description git add file.txt Stage file git add --patch file.txt Stage some but not all changes in a file git mv file1.txt file2.txt Move/rename file git rm --cached file.txt Unstage file git rm --force file.txt Unstage and delete file git reset HEAD Unstage changes git reset --hard HEAD Unstage and delete changes git clean -f|--force -d Recursively remove untracked files from the working tree git clean -f|--force -d -x Recursively remove untracked and ignored files from the working tree Changing Commits Command Description git reset 5720fdf Reset current branch but not working area to commit git reset HEAD~1 Reset the current branch but not working area to the previous commit git reset --hard 5720fdf Reset current branch and working area to commit git commit --amend -m &quot;New message&quot; Change the last commit message git commit --fixup 5720fdf -m &quot;New message&quot; Merge into the specified commit git revert 5720fdf Revert a commit (use git log to check commit ids) git rebase --interactive [origin/main] Rebase a PR (git pull first) git rebase --interactive 5720fdf Rebase to a particular commit git rebase --interactive --root 5720fdf Rebase to the root commit git rebase --continue Continue an interactive rebase git rebase --abort Cancel an interactive rebase git cherry-pick 5720fdf Copy the commit to the current branch Compare Command Description git diff See difference between working area and current branch git diff HEAD HEAD~2 See difference between te current commit and two previous commits git diff main other See difference between two branches View Command Description git log See commit list git log --patch See commit list and line changes git log --decorate --graph --oneline See commit visualization git log --grep foo See commits with foo in the message git show HEAD Show the current commit git show HEAD^ or git show HEAD~1 Show the previous commit git show HEAD^^ or git show HEAD~2 Show the commit going back two commits git show main Show the last commit in a branch git show 5720fdf Show named commit git blame file.txt See who changed each line and when Stash Command Description git stash push -m &quot;Message&quot; Stash staged files git stash --include-untracked Stash working area and staged files git stash list List stashes git stash apply Moved last stash to working area git stash apply 0 Moved named stash to working area git stash clear Clear the stash Tags Command Description git tag List all tags git tag -a|--annotate 0.0.1 -m|--message &quot;Message&quot; Create a tag git tag -d|--delete 0.0.1 Delete a tag git push --tags Push tags to remote repository Remote Command Description git remote -v List remote repositories git remote show origin Show remote repository details git remote add upstream &lt;url&gt; Add remote upstream repository git fetch upstream Fetch all remote branches git rebase upstream/main Refresh main branch from upstream git remote -v List remote repositories git push --tags Push tags to remote repository Submodules Command Description git submodule status Check status of all submodules Pull submodules git submodule sync git submodule init git submodule update Change branch cd /submodule git fetch origin &lt;branch-name&gt; git checkout &lt;branch-name&gt; cd / Git Global Settings Related Setup: https://gist.github.com/hofmannsven/6814278 Related Pro Tips: https://ochronus.com/git-tips-from-the-trenches/ Interactive Beginners Tutorial: http://try.github.io/ Git Cheatsheet by GitHub: https://services.github.com/on-demand/downloads/github-git-cheat-sheet/ ReminderPress minus + shift + s and return to chop/fold long lines! Show folder content: ls -la NotesDo not put (external) dependencies in version control! SetupSee where Git is located:which git Get the version of Git:git --version Create an alias (shortcut) for git status:git config --global alias.st status Help:git help GeneralInitialize Git:git init Get everything ready to commit:git add . Get custom file ready to commit:git add index.html Commit changes:git commit -m &quot;Message&quot; Commit changes with title and description:git commit -m &quot;Title&quot; -m &quot;Description...&quot; Add and commit in one step:git commit -am &quot;Message&quot; Remove files from Git:git rm index.html Update all changes:git add -u Remove file but do not track anymore:git rm --cached index.html Move or rename files:git mv index.html dir/index_new.html Undo modifications (restore files from latest commited version):git checkout -- index.html Restore file from a custom commit (in current branch):git checkout 6eb715d -- index.html ResetGo back to commit:git revert 073791e7dd71b90daa853b2c5acc2c925f02dbc6 Soft reset (move HEAD only; neither staging nor working dir is changed):git reset --soft 073791e7dd71b90daa853b2c5acc2c925f02dbc6 Undo latest commit: git reset --soft HEAD~ Mixed reset (move HEAD and change staging to match repo; does not affect working dir):git reset --mixed 073791e7dd71b90daa853b2c5acc2c925f02dbc6 Hard reset (move HEAD and change staging dir and working dir to match repo):git reset --hard 073791e7dd71b90daa853b2c5acc2c925f02dbc6 Hard reset of a single file (@ is short for HEAD):git checkout @ -- index.html Update &amp; DeleteTest-Delete untracked files:git clean -n Delete untracked files (not staging):git clean -f Unstage (undo adds):git reset HEAD index.html Update most recent commit (also update the commit message):git commit --amend -m &quot;New Message&quot; BranchShow branches:git branch Create branch:git branch branchname Change to branch:git checkout branchname Create and change to new branch:git checkout -b branchname Rename branch:git branch -m branchname new_branchname or:git branch --move branchname new_branchname Show all completely merged branches with current branch:git branch --merged Delete merged branch (only possible if not HEAD):git branch -d branchname or:git branch --delete branchname Delete not merged branch:git branch -D branch_to_delete MergeTrue merge (fast forward):git merge branchname Merge to master (only if fast forward):git merge --ff-only branchname Merge to master (force a new commit):git merge --no-ff branchname Stop merge (in case of conflicts):git merge --abort Stop merge (in case of conflicts):git reset --merge // prior to v1.7.4 Undo local merge that hasn‚Äôt been pushed yet:git reset --hard origin/master Merge only one specific commit:git cherry-pick 073791e7 Rebase:git checkout branchname ¬ª git rebase masteror:git merge master branchname(The rebase moves all of the commits in master onto the tip of branchname.) Cancel rebase:git rebase --abort Squash multiple commits into one:git rebase -i HEAD~3 (source) Squash-merge a feature branch (as one commit):git merge --squash branchname (commit afterwards) StashPut in stash:git stash save &quot;Message&quot; Show stash:git stash list Show stash stats:git stash show stash@{0} Show stash changes:git stash show -p stash@{0} Use custom stash item and drop it:git stash pop stash@{0} Use custom stash item and do not drop it:git stash apply stash@{0} Use custom stash item and index:git stash apply --index Create branch from stash:git stash branch new_branch Delete custom stash item:git stash drop stash@{0} Delete complete stash:git stash clear Gitignore &amp; GitkeepAbout: https://help.github.com/articles/ignoring-files Useful templates: https://github.com/github/gitignore Add or edit gitignore:nano .gitignore Track empty dir:touch dir/.gitkeep LogShow commits:git log Show oneline-summary of commits:git log --oneline Show oneline-summary of commits with full SHA-1:git log --format=oneline Show oneline-summary of the last three commits:git log --oneline -3 Show only custom commits:git log --author=&quot;Sven&quot;git log --grep=&quot;Message&quot;git log --until=2013-01-01git log --since=2013-01-01 Show only custom data of commit:git log --format=shortgit log --format=fullgit log --format=fullergit log --format=emailgit log --format=raw Show changes:git log -p Show every commit since special commit for custom file only:git log 6eb715d.. index.html Show changes of every commit since special commit for custom file only:git log -p 6eb715d.. index.html Show stats and summary of commits:git log --stat --summary Show history of commits as graph:git log --graph Show history of commits as graph-summary:git log --oneline --graph --all --decorate CompareCompare modified files:git diff Compare modified files and highlight changes only:git diff --color-words index.html Compare modified files within the staging area:git diff --staged Compare branches:git diff master..branchname Compare branches like above:git diff --color-words master..branchname^ Compare commits:git diff 6eb715dgit diff 6eb715d..HEADgit diff 6eb715d..537a09f Compare commits of file:git diff 6eb715d index.htmlgit diff 6eb715d..537a09f index.html Compare without caring about spaces:git diff -b 6eb715d..HEAD or:git diff --ignore-space-change 6eb715d..HEAD Compare without caring about all spaces:git diff -w 6eb715d..HEAD or:git diff --ignore-all-space 6eb715d..HEAD Useful comparings:git diff --stat --summary 6eb715d..HEAD Blame:git blame -L10,+1 index.html Releases &amp; Version TagsShow all released versions:git tag Show all released versions with comments:git tag -l -n1 Create release version:git tag v1.0.0 Create release version with comment:git tag -a v1.0.0 -m 'Message' Checkout a specific release version:git checkout v1.0.0 CollaborateShow remote:git remote Show remote details:git remote -v Add remote upstream from GitHub project:git remote add upstream https://github.com/user/project.git Add remote upstream from existing empty project on server:git remote add upstream ssh://root@123.123.123.123/path/to/repository/.git Fetch:git fetch upstream Fetch a custom branch:git fetch upstream branchname:local_branchname Merge fetched commits:git merge upstream/master Remove origin:git remote rm origin Show remote branches:git branch -r Show all branches (remote and local):git branch -a Create and checkout branch from a remote branch:git checkout -b local_branchname upstream/remote_branchname Compare:git diff origin/master..master Push (set default with -u):git push -u origin master Push:git push origin master Force-Push:`git push origin master ‚Äìforce Pull:git pull Pull specific branch:git pull origin branchname Fetch a pull request on GitHub by its ID and create a new branch:git fetch upstream pull/ID/head:new-pr-branch Clone to localhost:git clone https://github.com/user/project.git or:git clone ssh://user@domain.com/~/dir/.git Clone to localhost folder:git clone https://github.com/user/project.git ~/dir/folder Clone specific branch to localhost:git clone -b branchname https://github.com/user/project.git Clone with token authentication (in CI environment):git clone https://oauth2:&lt;token&gt;@gitlab.com/username/repo.git Delete remote branch (push nothing):git push origin :branchname or:git push origin --delete branchname ArchiveCreate a zip-archive: git archive --format zip --output filename.zip master Export/write custom log to a file: git log --author=sven --all &gt; log.txt TroubleshootingIgnore files that have already been committed to a Git repository: http://stackoverflow.com/a/1139797/1815847 SecurityHide Git on the web via .htaccess: RedirectMatch 404 /\\.git(more info here: http://stackoverflow.com/a/17916515/1815847) Large File StorageWebsite: https://git-lfs.github.com/ Install: brew install git-lfs Track *.psd files: git lfs track &quot;*.psd&quot; (init, add, commit and push as written above)","link":"/2020/12/26/git-cheat-sheet/"},{"title":"use hexo theme icarus","text":"Use hexo theme icarus!!!I modified my theme to icarus. I feel icarus theme is awesome. You can find in this link. AttentionDon‚Äôt forget to midify google files for SEO after using hexo g, since this amazing theme will change all posted html files.After that, using hexo d to publish in github.","link":"/2021/01/08/use-hexo-theme-icarus/"},{"title":"test secret page","text":"6031008eaf30dfa9f6cee48a6a69006e3e13f9108c833c004493f3f77b8c80d1c8eddf3a390b77ee3d0a3f6e7a570ccfc55be01dd8c84f2c7fe099e3e78a54621640a987e054abbfe146ab8a6c121b233b1669903c6efd4591b4ce1182f44c8fa278b767ca2625e68934114b0618004c640aff36b1b789f7fbb787785001caf0624337ee427f85e6f732a4c75e967303d9325fe98879e960efde7f342b836cd9305f7cc596619df0eb97f394d24884286c3e087503b9b3bcb1295887ffa897ccb71502c3db77df5b41ea608b0156e2f48612edf6e4199108b602af5229cfe8341c15390c167621986eb7e4aafbe3560f9536ec1b283682e70b96a12a06500224f00f5993c28024c9bb22ae130fb85cea107ff50af4503effa06e9ee1fe80939eaa9a7b4a8b0484db7a572fdfa0ce965095b8e81a6eafa1433994d9d00d3ab4570344238117d460dce05b50a14c5b8caafd705976ac878f9818068968e31540ef9e0a3fcdee7cf03b19d0018949abdd019c135175e5bb1d0728ecc0f2dc1283e89f14ad44d3d3b33fd76a32396970b1ea4a95ad8c4e6fa32e830c0e84e8fc07f891d0af77dc789d6b32663e4606f155246d6e23fb8e609f1db0fbdf87478a58e3a0773f550848dc0ffa06a66aa8fa751cf47576c124a70ba902b6f44165f0f2c7c7bfc4219d75a632d2f4d133a1512d70258248b7bb7c30517b23201cda9dea77e6ea45f318c2b223e209f9472a38615b4186b5d7084f7e0a72da0d5e7b1f68a0ad4d039f3ec92897c76ef653b880a4101a0c949313e40e68777f00a9148d33533161db0c9c73864453614d5e0da6e79e3ed74e4cdebe0a88b9f74e96b8a9407841d1665fa769602f02832cc4234526130499da51a1c418fffcbd5f144f4b6ce51b9604b3ddd555b61e30ded5b6af1131839b30b503701204b5891f37799f761f72fb40e945611752af382ba6f995cf8271c4d6c86d93c3fa80bb55253700d52bf5abc41e7fbd84784ee3e5f967ff0b31c8e7e1e0b3afa76b60339e006357f868b72f9a8b21b21341b91c1041d6403b2004e24f7359f722d364869403407a31f88bc1421aa56ea67c18dafad2810522de4d363935f09a632b9accb32625f8f2491d36b46a08aab66fed0c6066d142601cecc815cac6b753c04f3245f493e476af062d633a8f2bc35320d3874b65a6df4056b26e82e7b0a3c6be928d67fab524c8f4bdcda4c6c5a9881e11a526c290c349da40674a82af7f8f2f3cbcb95333b5210ede79e03d87314c3c62f636a75abeb97b76520c7bcace157e4ea18204910ded3644261f8577fb4c5832ceedb2a73d552aab850f2c069c1b41f4efe5a65626f5987dc0524cac3f5aac43a95386cbb30aa6ec805f3902fb3469208560fb8eeca9bd6d6e49aa339d7f7d281148e7ae94d9b92b3e9a7455a9c4a81352148f8cc85ac0ce73c65ca21ba3fd78ce8cfab824d365df497269fa7416dbc81708b7aaea92ae6e492b42bd429e4371839a2bd4cee53881654350ab108cae47bd46e628b4b6472eb920d631b93aec302da52579ccc5409d31df293efa37e2e4360301edb94f38adc6c959346dcc6900ea124838f6a71759aa635a75db6a09ccf884a9b497a2818dd3193506c2d886f60e7ccf406956ce0cc2f463bb9666df7979618221788e4d7532f4507f02919ac91c96e6accbf3c0d73bc9ce219333cebc6beb9e673511cabb5a97ae6ad2c6400c25b7341fa00d40951b4671383fc4d56defc4a4f064f2bdfee46016e2801a5d37baaa8f0de5cba92b052c75a873451cbe0123767e106f0f7bb9520cc09755feade808087f057598d51bacf83b73f9f458c1425b531a37e15c5583ece7d9f2b8d9cb82f254b0dc58849fd2fc148325e57ebbc4d1ff05251882b3f63eabb13d45b624918daf16f42330922e1c1eec8cf52bdc5a94d8eaae8fb61d7b4be982a750107d742e75d5aa777dbe15a7cdadcb34b833155aae603c7630ad557be0a826e1ef0a302fce86fcdf2579b30f45447be97aaf2c5717b199b3b7e382acd5f330399df4757afcad7ea9ce597322c6db0e7fcdfcbe47176212b471ce2100b645fe98200600553b34303c2683315d6814cfb679ef8354d0833fab5398e5690cc92bafa5ab83ede889a12e729992786b50dd77355d8fb39b726c721b57a59ad813a2197c5c8a3970a4d77636018ddef5ccebf051312e01811a7cc0faf2189a45ca6362f59e020855d86278702d2aaf5613086ff51bc872aaaf0789a6b00b95cf7f73c5353147626537ce9986d9643dd3e84d5aa1f855aa2aa9bf86a9a32e60d1c0924301118b9351ab8940f70227e010be897c8e2b83fab5049da8ea5cb2bfb5b2bd732d101cea3c413612f6277006dbf26a722ccd04296d5b879571fdbae019e7b908ad1aaedd5c8f18dbff2be83b5dadfa6f6bbd2fd8b8da22ad9cb558db3e10537b7c7ada31ee5764371527d3cc23c11e1e64742481306902315adb9d4c30e84552e322c3fc20079eaf291dbe92d2606793d89529dcaf3a8b7c97b35657454c93fa1da03ae16d4ec6827efd8e9bcb1aa5d6df5326219067dc3f2abd2695775fd62e7f36a5f1377e891af877b94fd9940535665087d13b2f4fda46bc209eee53fc9407b8ae5f9332f3499c2a7c36302a1f694f67f58becd809cf512beee8ce2a64be3c9000139c721c5c100f7c2aea21aa91987c83a6c66d5a32004ae54c7b7cf9f93ae6a005381e8d0b51eedea30cdb6a43d3fa7e778079697866f19aa0ae81746d236f6ab02d8b5994df417506be90ef4106d9b49f37acfe4bcbc787345e0da9de60b96a0c7fcd503b2f5f84dab1a16926769828e95c7ca03146de3dcef122ca6244e7514ba4ee6ab3564349182b06ece389fa1581dfefcc1b86967755b39fef54bed71a3d5eda6d673078546da938b1eed0e57b487f58b16f612ffed0df2b69de83146fc745bfcd3623a317edf7b3fe74d73404e9b5b973b1a221dc92360e036ed1327f1a7934195a3fac6ce687c2fb7040f67ef6b77f1bbdab059cb27ea40a755bb269825ff27036861930591291b8f29ad90a14f64cb890162cff4cac1dc3dfe8f2e846057a8c41513d8bedb270ba91f6d5c7f5d63558986ea83536e034f1c57a5547e636d6f933d8911731185a6c9628abd3464d129e56b46c561cfef2311bf1a4a6239b51ec13efc0f3ba6bc696aeb2c62097b7956d6e20fe85dddca6492a879a478f106e24a1942b723c2e31a86a1146a4a36d4da755d0de5d2cccff7697bca6be5374339898c36e14184d3563976a3da0993f8f22650fdf531624022025671384426eba32cfc989ec6d1ed0cbbad0074a0ab44c89d2b68a61cc6476b3e998b68fcfdd087a8358ee023390031d68d0fc49275a57ddffc9fd36699499f6350610eb5aa33eb434c3cf49a5280f07b5c803e4f43cb0d78233f9025b56e2cb92d0644bc2390729820145125ff167c99b88f51849b72525ba5c59f2dcdd0c576a127fbdc90512a42458a5726e5b5427a4db246b33e2299b7c220ca281b6b2808f6b3fcca2124d861bb0d816c23cfcfd50d70770dde746ccfb7c8ee65e70b43f07d3884522816601101be6800d62e4c2ca1d356b37023f40f85ade6fa527801317ef9eb4d49fc39baa3f6065648a846d736b9493a18afa3a80b84f1b0cb34c042c05d45735473a27ef09b3c803f9b09d414de7514dd5a7632b710c641f42f2b25f4629e2e770ff0428b493b80d2ac5335f97ddbe5f76da81dadd19d246da0e8d2a2e3908cb7cca6b14591359de428a33d7acadb2d5b0f7f71171a6cba654cfe21a51664b9c90a9c70ff5d1a5ac28c4e936e76c9f7627dcab9b594f89363005d43abb228412cd778b710dab336de5f11d6ebc0f1285c0511709375f49f34ecf844c942de71693f8d47cb58ff60ef10d3a3d02cd52e9fc283fc48691e365a3828a6ec04be88a63457640dcdf815fb17d7981d0ec6b27bf60cd5a1f403108ab50b667ef34eec5bb75a5b634ac4275bf03c219c14e228cc9fe89886e68300d8155b32171c5abc655fbfe559ccc492ca05d40a4e4cabb7dc26c4b2e8b969974e5d2606822f5740cec3f3ca0496a7f2828f1af95f81f2670cc792f78a122d7d09711471725fbbcea35656d2dbeb419d0c417b2b08a7e58ca09196bae0889741804f787239e2f3bf6c987fc5f94b8cc6d170537055dca9584d91e77e67fc86d5483b6b66d2e438588548c37b649faef9d1b9f4841bc5ec0f19b3f00a83d732e5e16814007c426768cf7ffa4468ec6aa2688f5ff8b36b113419919fad6e7bd08a79fa8eba5fb737383fa5993a51b2d0b31db796285c31d703ed55672769b1bc81ac87d059327c304e4ce71266900f3bc98be034f979771919d6e449835a152d07ebf6a245c2d002aa60a168fb4a8503a44ce811fef865bb232e34912c1a15ebb84944fc12341b95430c6f6cf8ec1b97647d70f1c5e73e29559593190232a67991a4f84ff038a60bc5be8263cc986a947bfc689c70bf6003ca6527e56a72891383ba9fbe7772710e62f40253fad555e67d3f9c6ebd227cbb01a2b3adc6dcabdd5dd9ea58e553412aa677c90ce960d998b284a66378e2dbed2757f3ee019f96816ac70891c2d9011925f82e6b07e4bfa05e0953472f29aa9e64f97463889f33831acec8099cdb2fe50c250b17b3b605ac1e68d12311fa9c7010c0efcf1bfba8cf968f3fce33951ec30d2981aad please enter valid password","link":"/2021/01/09/test-secret-page/"},{"title":"C++ midterm review","text":"COMP 345 C++ midterm review C++ midterm review Slide Set 1:1. program structure C++ is a superset of C Main function is the program driver Free functions Data structures A C program is valid C++ program Classes encapsulate other functions: Object-oriented The main function is a free function, not a class member Only simplistic programs are self-contained into one file C++ is a language that specifies programming structures and includes onlybasic data structures and operators Most programs require the use of libraries Complier will compile the library‚Äôs code and the program‚Äôs code, thenthe linker will link them Unlike Java, a single C++ file can contain many classes/functions/datastructures. This leads to what is called physical design, i.e. decisions as to what entities are grouped within/across files. multiple files programs Aside from having to use libraries, large programs need to be split into different files for various reasons: Speed up compilation: Upon changes to the code, the compiler will recompile only the files that had a change. Increase organization, decrease browsing time: Physically splitting your code along logical lines will make it easier to browse through the code to locate classes, functions, etc. Facilitate code reuse: Modular physical design allows for grouping related entities and separating them from less related ones. Each group can then be logically designed to be reusable across different projects. Reused code can be fixed, fixing all projects that use it. Split coding responsibilities among programmers: For really large projects, several programmers are involved. The larger are the program files, the more likely it is that several programmers are changing the same file simultaneously. 2. compilation unit In C++, a compilation unit is a file (.cpp) A file may contain several functions, data structures, or classes (unlike Java) Each compilation unit is compiled individually into an object file The object files typically have cross-references to other object files The linker then attempts to resolve cross-references between the object files to form the unique executable file. Each component is a group of highly cohesive and highly coupled elements Cohesion: The degree to which the elements of a module belong together in the achievement of a common goal. Cohesion is increased if: The functionalities embedded in a module have much in common. The composing elements carry out a small number of related activities, by avoiding coarsely grained and/or unrelated sets of data. Advantages of high cohesion: Increased understandability of modules (simpler, fewer operations). Increased maintainability, because changes in one module require fewer changes in other modules. Increased reusability, because application developers will find the component they need more easily among the cohesive set of operations provided by the module. Coupling: the degree to which an element relies on other elements for its operation Coupling is not a desired quality, but is a side-effect of defining different elements to carry a common task Much related to cohesion: good modules exhibit high cohesion and high coupling Coupling between modules is what really needs to be avoided Disadvantages of high coupling: A change in one module forces a ripple effect of changes in other modules Assembly of modules requires more effort due to the increased inter-moduledependency A module might be harder to reuse and/or test because dependent modules must be included 3. header/cpp files header File (.h file) Contains class declaration with free functions and operators declarations Useful to programmers, as it is overview of a component that omitsimplementation details Source File (.cpp file) Contains free/member function definitions The .cpp file is a compilation unit General rules: There should be a one-to-one relationship between a given .cpp file and a corresponding .h file, and they should have the same name. The .cpp file ‚Äú#includes‚Äù its corresponding .h file. A .cpp file should never be ‚Äú#included‚Äù, as it effectively merges two compilation units together. cpp files contain the executable code, i.e. function definitions Function definitions: Functions - main() function, free functions, member functions Operators - free operators, member operators 4. includes Two types to use #include #include &quot;mymodule.h&quot; Quotes indicate a user-defined module The compiler will find it in your project directories #include &lt;mymodule.h&gt; &lt; &gt; indicate predefined library header file The compiler will find it in the library directories Using different search paths 5. redundant includes Use preprocessor directives Instructs the compiler to read a header file only once two ways for fname.h : 123456#ifndef FNAME_H#define FNAME_H...//Content of header file...#endif #pragma once 6. namespaces Namespace: Collection of name definitions inside of a program, potentially across different files For example, namespace ‚Äústd‚Äù is common in libraries. Has all standard library definitions we need 12#include &lt;iostream&gt;using namespace std; Includes entire standard library of name definitions123#include &lt;iostream&gt;using std::cin;using std::cout; Can specify just the objects we want Can be more efficient, as it avoids including things we don‚Äôt use This is one reason why the use of using NS::name directive is advocated over using namespace NS 1234567891011121314151617{using namespace NS1;myFunction();}{using namespace NS2;myFunction();}//or{using NS1::MyFunction();myFunction();}{using NS2::MyFunction();myFunction();} global namespace All code goes in some namespace Unless specified, code belongs to the global namespace No need for using directive Global namespace always available But there is no way to ‚Äúturn it off‚Äù Thus, global namespace is prone to name clashes the same namespace needs to be declared in both .h and .cpp files 12345678910111213// In the header file namespace Space1{ void greeting();}//In the implementation file (definitions):namespace Space1{ void greeting() { cout &lt;&lt; &quot;Hello from namespace Space1.\\n&quot;; }} global vs. unnamed namespace 12345678910111213#include &lt;iostream&gt;using namespace std;namespace {const int i = 4; // this is local}int i = 2; // this is globalint main() {cout &lt;&lt; i &lt;&lt; endl; // ERROR, i is ambiguousreturn 0;} Slide Set 2:1. structs and classes as data types User-defined data types using struct (as in C), as well as class (object-oriented programming) Both are allowed in the same program In fact, they are almost equivalent, but struct was kept for backward compatibility A struct can have data members, methods, constructors, destructors, etc One difference is that a struct sets its members as public by default 2. variable initialization Declarations can include an optional initialization, which can use different syntactical forms: 1234Type a1 {v};Type a2 = {v};Type a3 = v;Type a4(v); All of these are widely used and apparently equivalent. However: Some are restricted to use in certain situations. Only the first one is universally usable, and is actually safer, as it implicitly does some checking of the value passed versus the specified type. 12int a1 = 1.5; //allowed using truncationint a1 {1.5}; //not allowed, as type checking is enforced Default initialization: variable is constructed with no initializer. 12345//For basic types, the previous value held in the memory space is kept.//For objects, the default constructor is called.int x;std::string s;classA *objAv1 = new classA; Value initialization: variable is constructed with an empty initializer. 12345//For basic types, the value is zero-initialized.//For objects, each member is value-initialized.int x{};std::string s{};classA objA = classA(); Direct initialization: variable is constructed using explicit constructor arguments. 12345//For basic types, no constructors, but constructor call syntax can be used.//For objects, the corresponding constructor is calledint x(4);std::string s(&quot;hello&quot;);classA objA(value1,value2,value3); Copy initialization: Variable is created using the value(s) from an existing object of the same type, or uses a converting sequence if available. Applies only to named objects. 123std::string s = &quot;hello&quot;;classA objAv1; classA objAv2(objAv1);classA objAv3 = objAv1; Copy initialization is implicitly used when passing and returning objects by value. List initialization: Initializes an object from a braced initialization list. 123std::string s{'a', 'b', 'c'};int n1{1}; // direct-list-initializationint n2 = {1}; // copy-list-initialization Reference initialization: Binds a reference to an object. 12char&amp; c = a[0]int i1; int&amp; iref = &amp;i1; Reference initialization is used implicitly when a value is passed by reference or a reference is returned from a function. Aggregate initialization: Initializes an aggregate from braced initialization list. It is list initialization but applied to aggregates. Simply stated, an aggregate is either: an array an object of a class that has only public members and no constructors Definition of an aggregate varies between standards.12345678910111213char a[3] = {'a', 'b'};int i[3] = {1,2,3};class aggrB{int x, y;}class aggrA{ int a, b, c; aggrB b;}aggrA a1 = {1,2,3,{4,5}}; 3. implicit/explicit type coercion type coercion: implicitly or explicitly changing the type of variables or values, and this makes C++ a weakly typed language. int var = 2.99; // 2 is assigned to var! static_cast, dynamic_cast Different kinds of Explicit type casting123456789101112static_cast&lt;Type&gt;(expression)//General-purpose type castingstatic_cast&lt;double&gt;(intVar)const_cast&lt;Type&gt;(expression)//Cast-out ‚Äúconstantness‚Äùdynamic_cast&lt;Type&gt;(expression)//Runtime-checked conversion of pointers and references within a single class hierarchy. Used for downcasting from a superclass to a subclassreinterpret_cast&lt;Type&gt;(expression)//Implementation-dependent casting, performs a binary copy and assigns the new type to the resulting binary copied value. Highly unsafe and error-prone. * upcasting/downcasting static_cast makes a static (compile-time) type cast, but correct runtime behavior cannot be verified. Use dynamic_cast to downcast into a subclass dynamic_cast works on pointers Does runtime checking to verify that the cast is successful Also deals with polymorphic types and virtual methods at runtime 4. conversion sequences Two things can be used in a conversion sequence: conversion constructor: a constructor that takes a value of a type and creates an object of another type. A::A(int){...} conversion operator: a member operator that has the name of a type.A::operator int(){...} If you don‚Äôt want your constructors or operators to be used in a conversion sequence, you have to declare them as explicit in the class declaration explicit B(int); explicit operator bool() const; 5. pointers A pointer variable contains the memory address of a portion of memory that in turn contains a specific value. 123int i = 99;int* p = &amp;i;cout &lt;&lt; *p &lt;&lt; endl; Two operators on pointers: Dereferencing operator: *, e.g. *p refers to the object pointed to by the pointer. Address operator: &amp;, e.g. &amp;i refers to the address of the first memory cell holding a value. pointer assignment: p1 = &amp;v1;, p2 = p1; value assignment: *p2 = *p1; If pointers are declared in a function The pointer is managed as a local variable The value pointed to is dynamically allocated/deallocated, allocated with new operator, deallocated wih the delete operator. Allocated on the heap (also known as freestore) through the runtime system‚Äôs interaction with the operating system. 12345int *p;p = new int(5); //allocate memory... //Some processing...delete p; //deallocate memoryp = NULL; //prevents dangling pointer errors 6. pointer artithmetic Can perform arithmetic operations on pointers Used to navigate arrays (covered later)12int *d;d = new int[10]; d refers to: `address of new int[10]`` d + 1 refers to: address of new int[10] + 1*sizeof(int)(Note: type of int is 4 bytes, so sizeof(int) is 4 bytes.) d + 2 refers to: address of new int[10] + 2*sizeof(int) d[i] == *(&amp;d[0]+i) == *(d+i) 7. pointers and const two sepatate meanings/usages of const Specify the constantness of the pointer Specify the constantness of the value pointed to.1234567int x;int * p1 = &amp;x; // non-const pointer to non-const intconst int * p2 = &amp;x; // non-const pointer to const intint * const p3 = &amp;x; // const pointer to non-const intconst int * const p4 = &amp;x; // const pointer to const int 8. void/wild/dangling/null pointers void pointer: a pointer that is allowed to be pointing to a value of any type. disadvantage: need to cast them specifically in order to use them.123456789101112131415161718192021// void* datavoid increase (void* data, int psize){ if ( psize == sizeof(char) ){ char* pchar; pchar=(char*)data; ++(*pchar); } else if (psize == sizeof(int) ){ int* pint; pint=(int*)data; ++(*pint); }}int main (){char a = 'x';int b = 1602;increase (&amp;a,sizeof(a));increase (&amp;b,sizeof(b));cout &lt;&lt; a &lt;&lt; &quot;, &quot; &lt;&lt; b &lt;&lt; '\\n';return 0;} wild pointer: a pointer that points to an arbitrary memory location. This is most often due to an uninitialized pointer declaration like int *x; wild pointer can lead: Segmentation fault: pointing to an address that is not accessible by the program‚Äôs process pointing to an address that contains read-only data Arbitrary value: pointing to a valid address that contains a valid but arbitrary integer value dangling pointer: a pointer that used to point to a valid memory area, that has now been potentially reassigned to another usage. 123456789101112131415int* func(){ int num = 1234; // num is local to func return &amp;num; // func returns pointer to num}void func(){ ClassA *objA = new ClassA(); delete(objA); // *objA is deallocated // objA is now a dangling pointer // Dereferencing will still appear // to work, until the memory is used // for something else} null pointer: a pointer that points nowhere int* x = nullptr; int* y = NULL; int* z = 0; Dereferencing a null pointer is a compilation error : safer pointer usage. Pointers should be initialized as null pointers. Dangling pointers should be assigned to null. Check for null pointer is then a good way to know if a pointer is valid or not. * stack/heap/new/delete* arithmetics9. references A reference is in fact an ‚Äúalias‚Äù for a memory space. Terminology: the reference is an alias to a referent (the value pointed to). Both the reference and the referee represent the same value/object. such as int&amp; r{v1};, return &amp;r references are often used to pass parameters or even return a value. 10. smart pointers (NO)11. parameter passing Parameters can be passed to a function: by value by pointer by reference cannot pass NULL, as a reference cannot be NULL 12. strings two types: C-style character strings char greeting[6]={'H','e','l','l','o','\\0'}; terminated by \\0 (a null character) char greeting[] = &quot;Hello&quot;; &lt;cstring&gt; string class type introduced with Standard C++ Slide Set 3:1. input/output streams C++ uses streams for input/output. C++ programs can also use C-style input/output, which don‚Äôt use streams. Streams are objects that are defined to handle a device on which input or output operations are performed. Streams allow C++ programs to interact with external entities controlled by the operating system, such as: program execution console keyboard files Other external entities such as network sockets are not provided by basic C++ stream classes, but are available in various libraries (e.g. Boost). 2. cin/cout I/O stream objects cin, cout, cerr Defined in the C++ library called &lt;iostream&gt; Must have these lines (pre-processor directives) : 12#include &lt;iostream&gt;using namespace std; cout is an object that is an instance of the ostream class, defined in the iostream library. cout is a stream, &lt;&lt; is the stream insertion operator that is used to output to the stream. Any data can be outputted to a stream Variables Constants Literals (eg. string) Results of expressions Stream manipulators set output specially-formatted numbers12cout &lt;&lt; fixed &lt;&lt; showpoint &lt;&lt; setprecision(2);//show exaclty 2 digits after the decimal point: 78.50 keyboard input stream use cin for input from the keyboard use &gt;&gt; (stram extraction operator) cin &gt;&gt; num (right-hand-side must be a variable) 3. files stream declarations, open/close, usage Similar to cin/cout streams, there are streams for input/output from/to files File input : ifstream File output : ofstream Part of library &lt;fstream&gt; use &lt;&lt; operator to write use &gt;&gt; operator to read output: 1234567//1ofstream outputfilestream;outputfilestream.open(&quot;scores.txt&quot;);//2ofstream outputfilestream(&quot;scores.txt&quot;);//outputfilestream.close(); input: 12345ifstream inputfilestream;infilestream.open(&quot;scores.txt&quot;);//orifstream inputfilestream(&quot;scores.txt&quot;);inputfilestream.close(); fsteram object akso be used, but need to specify file modes, such as ios::out 12345678fstream filestream;filestream.open(&quot;scores.txt‚Äú, ios::out);//output operationsfilestream.close();//do other thingsfilestream.open(&quot;scores.txt‚Äú, ios::in);//input operationsfilestream.close(); file modes: ios::in Opens a file for input. ios::out Opens a file for output. ios::app Appends all output to the end of the file. ios::ate Opens a file for output. If the file already exists, move to the end of the file. Data can be written anywhere in the file. ios::trunc Discards the file‚Äôs contents if the file already exists. (This is the default action for ios:out). ios::binary Opens a file for binary input and output. some examples: 12345678910111213141516171819202122232425262728ofstream output;// Create/open a fileoutput.open(&quot;scores.txt&quot;);// Write two linesoutput &lt;&lt; &quot;John&quot; &lt;&lt; &quot; &quot; &lt;&lt; &quot;T&quot; &lt;&lt; &quot; &quot; &lt;&lt; &quot;Smith&quot; &lt;&lt; &quot; &quot; &lt;&lt; 90 &lt;&lt; endl;output &lt;&lt; &quot;Eric&quot; &lt;&lt; &quot; &quot; &lt;&lt; &quot;K&quot; &lt;&lt; &quot; &quot; &lt;&lt; &quot;Jones&quot; &lt;&lt; &quot; &quot; &lt;&lt; 85 &lt;&lt; endl;// Close the fileoutput.close();////ifstream input(&quot;scores.txt&quot;);string firstName, lastName; char mi; int score;input &gt;&gt; firstName &gt;&gt; mi &gt;&gt; lastName &gt;&gt; score;cout &lt;&lt; firstName &lt;&lt; &quot; &quot; &lt;&lt; mi &lt;&lt; &quot; &quot; &lt;&lt; lastName &lt;&lt; &quot; &quot; &lt;&lt; score &lt;&lt; endl;input &gt;&gt; firstName &gt;&gt; mi &gt;&gt; lastName &gt;&gt; score;cout &lt;&lt; firstName &lt;&lt; &quot; &quot; &lt;&lt; mi &lt;&lt; &quot; &quot; &lt;&lt; lastName &lt;&lt; &quot; &quot; &lt;&lt; score &lt;&lt; endl;input.close();//ORstring firstName, lastName; char mi; int score;ifstream input(&quot;scores.txt&quot;);input &gt;&gt; firstName &gt;&gt; mi &gt;&gt; lastName &gt;&gt; score;while (!input.eof()) {cout &lt;&lt; firstName &lt;&lt; &quot; &quot; &lt;&lt; mi &lt;&lt; &quot; &quot; &lt;&lt; lastName &lt;&lt; &quot; &quot; &lt;&lt; score &lt;&lt; endl;input &gt;&gt; firstName &gt;&gt; mi &gt;&gt; lastName &gt;&gt; score;}input.close(); stream states and functions eof() returns true if the eofbit flag is set. fail() returns true if the failbit or hardfail flag is set bad() returns true if the badbit flag is set good() returns true is the goodbit flag is set clear() clear all stream state flags ios::eofbit set when the end of an input stream is reached ios::failbit set when an operation on the stream has failed ios::hardfail set when an unrecovered error has occurred ios::badbit set when an invalid operation has been attempted ios::goodbit set if none of the preceding bits is set 4. &lt;&lt; and &gt;&gt; operator overloading To enable a user-defined type to be outputted to a stream, the &lt;&lt; operator must be overloaded to accept this type as an operand. 5. MFC serialization (NO) Slide Set 4:1. classes vs. structs As classes are an expanded struct, it is also possible to declare and use a struct that includes member functions, and that even inherits from another struct, just like classes. The only difference between class and struct is that the members of a struct are public by default, but private by default for a class. A struct that does not use object-oriented features is nicknamed a POD for ‚Äúplain old data structure‚Äù. 2. struct usage Once the struct has been declared, it can be used as any other type The members of a struct can be referred to using the dot notation 1234567891011121314struct CDAccount1{ double balance; double interestRate; int term;}int main(){ CDAccount1 account; double interestRate; interestRate = account.interestRate/100.0;} 3. class declarations (.h and .cpp files) A Class is an Abstract Data Type A C++ class represents an abstract data type by allowing functions to be syntactically encapsulated into its definition, along with its data elements. The syntax of a class definition is the same as for a struct. 4. declaring/using objects Variables of a class type are referred to as objects. Objects are declared using the same syntax as for basic types. 12DayOfYear today;DayOfYear *birthday = new DayOfYear(); Class types can be used anywhere a type can be used: As type of a variable As parameter to a function As a return type to a function As a value pointed to by a pointer Members of a class are referred to using the dot notation and their access is regulated by the private, public and protected access specifiers. * with or without pointers The members of an object can be referred to using the dot notation:123int day1 = today.getDay();int day2 = *birthday.getDay(); // equivalentint day3 = birthday-&gt;getDay(); // equivalent kinds of methods Accessor: method whose goal is to expose a value in the state of an object, generally the value of a particular data member. Mutator: method whose goal is to change a value in the state of an object. Service method: method that exposes some service or desired behavior to other classes/objects. Internal behavior methods: methods that are used by the class/object itself internally, that defines some of its behavior that should not be triggered explicitly from the exterior. These methods should thus be private. Constructor: method whose goal is to manage the operations to be performed as an object is created. Destructor: method whose goal is to manage the operations to be performed as an object is destroyed. 5. inline functions/methods A function (or method) can be declared as inline, meaning that its entire code is to be replacing any call to this function. Function inlining aims at execution optimization by eliminating the function call mechanism overhead. However, it has the disadvantage of leading to code bloat if the body of the inline function contains a large amount of code and/or is consuming a large amount of memory and is called frequently at different places in the code. To define a function as inline, one needs to include the inline keyword as a prefix to the function definition. The function declaration does not need to have the inline prefix. In other words, inline functions have internal linkage. If you want to make an inline function accessible to other compilation units, they must include the definition of the inline function. Note that declaring a function/method as inline is only a hint for the compiler, and that the compiler may choose not to inline a function if it is not possible, e.g. for recursive functions. Rule of thumb: Inline your functions that have very short function definitions. Accessor methods are very good candidates for method inlining. 6. const specifier Specifies that its subject is constant, i.e. that its value cannot be changed after it is set. Can be applied to: Variables: A variable may be declared as const, which signifies that its value cannot be changed after it is initialized. It assumes that the variable is initialized upon declaration.1const DayOfYear newYearDay(1,1); Function parameters: Declaring a function parameter as const means that the value of this parameter cannot be changed by the execution of1234int max(const int i1, const inbt i2){ return i1 &gt;= i2 ? i1 : i2;} Methods: Declaring a method as const means that this function will not alter the state of the object to which it belongs. By extension, only methods declared as const can be called on an object that was itself declared as const upon declaration.1234int DayOfYear::getDay() const{ return day;} Pointers involve two different concepts the pointer itself the value pointed to 7. static specifier A member of a class can be declared as static, which means that this member is a class member, i.e. it belongs to the class as a whole an can be called on the class rather than on the objects. If it is a data member, its value is unique across all objects of the class, i.e. it is a ‚Äúclass global variable‚Äù. If a member function is declared as static, it can only use other members that are also declared as static. Used to define state and behavior that is independent of any particular object‚Äôs state instantiated from this class. Static member variables are generally initialized outside of the class declaration. Only constant static integral members can be initialized inside of the class declaration. The initialized value must be a constant expression. Other languages allow static classes (e.g. C#), which C++ does not have. Non-member variables can also be declared as static, which has a slightlydifferent meaning: When you declare a variable or function at file scope the static keyword specifies that the variable or function has internal linkage, i.e. it cannot be referred to outside of the compilation unit in which it is declared. When you declare a local variable to a function as static, the variable has static duration, i.e. its value is kept even when the execution goes out of the scope of this function. In other words, it is a ‚Äúglobal variable that has local scope to this function‚Äù. All static variables persist from the start of the execution of the program until the program terminates. Non-static member functions can access all data members of the class: static and non-static. static member functions can only operate on the static data members, or call other static member functions. 8. friends In principle, private and protected members of a class cannot be accessed from outside the class in which they are declared. A friend (function or class) of a class may access the members designated as private or protected. Friends are functions/methods or classes declared as such within a class. Friends are not members, so they are not inherited from a superclass. 9. constructors/destructors To sum-up, variables allocated on the stack are destroyed as we get out of the block‚Äôs scope, but objects allocated on the heap using new need to be manually destroyed using delete. Rule of thumb: for every new, there should be a corresponding delete somewhere. if you define your own constructor(s), make sure that you providea default constructor, as the default constructor is likely to be called implicitly by the runtime system. * declaration/implementation* initialization list* implicit/explicit constructor calls* call chain Destructors are called in the exact reverse order as the constructors. 10. inheritance more flexible and extensible design A base class is a class from which other classes inherit from. Often called a super-class, or a parent or ancestor class. A derived class is a class that inherits from a base class. Often called a sub-class, or a child or descendent class. Data Members Member functions not inherit constructors, copy constructors assignment operator destructor Multiple inheritance is when a derived class inherits from more than one base class. An abstract class is a class that is meant to be derived from by containing abstract member functions that do not have a definition, assuming that they will find a concrete implementation in a derived class. Because of that, an abstract class cannot be instantiated. overriding/overloading Overriding is when a member function is included in a derived class, having exactly the same signature as an inherited member function. A function‚Äôs signature is defined as: Function‚Äôs name Sequence of types in parameter list Including order, number, and types of parameters Signature does NOT include: Return type const keywords used for the function or the parameters References specifiers (&amp;) used for the parameters Overloading is when two or more functions with the same name aredefined in the same scope, each having different parameter lists. Thus, overloading applies to inherited member functions, but alsoapplies to free functions or operators available within a certain scope. vs. constructor/destructor implementationassignment operatorcopy constructorshallow/deep copy 11. multiple inheritance (Yes)12. virtual inheritance (Yes)13. diamond problem (Yes) Slide Set 5:1. statically allocated arrays (one(YES) / multidimensional(NO)* declaration, usage* memory allocation model* passing as parameters2. dynamically allocated arrays (one-dimensional (YES)) (multidimensional - NO)* declaration, usage* memory allocation model* passing as parameters3. array decay into a pointer(NO)4. static array classes (NO)5. STL containers (NO)* declaration, usage (NO)* iterators (NO)","link":"/2020/10/24/C-midterm-review/"}],"tags":[{"name":"MATH","slug":"MATH","link":"/tags/MATH/"},{"name":"Maple","slug":"Maple","link":"/tags/Maple/"},{"name":"Database","slug":"Database","link":"/tags/Database/"},{"name":"SQL","slug":"SQL","link":"/tags/SQL/"},{"name":"ENGR","slug":"ENGR","link":"/tags/ENGR/"},{"name":"Hexo-Theme","slug":"Hexo-Theme","link":"/tags/Hexo-Theme/"},{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"},{"name":"Python","slug":"Python","link":"/tags/Python/"},{"name":"Spider","slug":"Spider","link":"/tags/Spider/"},{"name":"Crawl","slug":"Crawl","link":"/tags/Crawl/"},{"name":"Markdown","slug":"Markdown","link":"/tags/Markdown/"},{"name":"SOEN","slug":"SOEN","link":"/tags/SOEN/"},{"name":"git","slug":"git","link":"/tags/git/"},{"name":"cheatsheet","slug":"cheatsheet","link":"/tags/cheatsheet/"},{"name":"hexo-theme","slug":"hexo-theme","link":"/tags/hexo-theme/"},{"name":"C++","slug":"C","link":"/tags/C/"}],"categories":[{"name":"MATH","slug":"MATH","link":"/categories/MATH/"},{"name":"Database","slug":"Database","link":"/categories/Database/"},{"name":"Maple","slug":"MATH/Maple","link":"/categories/MATH/Maple/"},{"name":"SQL","slug":"Database/SQL","link":"/categories/Database/SQL/"},{"name":"python","slug":"python","link":"/categories/python/"},{"name":"Markdown","slug":"Markdown","link":"/categories/Markdown/"},{"name":"ENGR","slug":"MATH/ENGR","link":"/categories/MATH/ENGR/"},{"name":"SOEN","slug":"SOEN","link":"/categories/SOEN/"},{"name":"notes","slug":"notes","link":"/categories/notes/"},{"name":"MySQL","slug":"Database/SQL/MySQL","link":"/categories/Database/SQL/MySQL/"},{"name":"spider","slug":"python/spider","link":"/categories/python/spider/"},{"name":"cheatsheet","slug":"notes/cheatsheet","link":"/categories/notes/cheatsheet/"},{"name":"funny","slug":"python/spider/funny","link":"/categories/python/spider/funny/"},{"name":"hexo-theme","slug":"hexo-theme","link":"/categories/hexo-theme/"},{"name":"tech","slug":"tech","link":"/categories/tech/"},{"name":"c++","slug":"tech/c","link":"/categories/tech/c/"},{"name":"midterm","slug":"tech/c/midterm","link":"/categories/tech/c/midterm/"}]}